#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="goodshepherd2011")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVisitor(Visitor instance);
    partial void UpdateVisitor(Visitor instance);
    partial void DeleteVisitor(Visitor instance);
    partial void Inserta2wal(a2wal instance);
    partial void Updatea2wal(a2wal instance);
    partial void Deletea2wal(a2wal instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertAdminPage(AdminPage instance);
    partial void UpdateAdminPage(AdminPage instance);
    partial void DeleteAdminPage(AdminPage instance);
    partial void InsertAlbumImage(AlbumImage instance);
    partial void UpdateAlbumImage(AlbumImage instance);
    partial void DeleteAlbumImage(AlbumImage instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertAya(Aya instance);
    partial void UpdateAya(Aya instance);
    partial void DeleteAya(Aya instance);
    partial void InsertDailyMeetingWithGod(DailyMeetingWithGod instance);
    partial void UpdateDailyMeetingWithGod(DailyMeetingWithGod instance);
    partial void DeleteDailyMeetingWithGod(DailyMeetingWithGod instance);
    partial void InsertHomeGallery(HomeGallery instance);
    partial void UpdateHomeGallery(HomeGallery instance);
    partial void DeleteHomeGallery(HomeGallery instance);
    partial void InsertImagesSize(ImagesSize instance);
    partial void UpdateImagesSize(ImagesSize instance);
    partial void DeleteImagesSize(ImagesSize instance);
    partial void InsertLibrary(Library instance);
    partial void UpdateLibrary(Library instance);
    partial void DeleteLibrary(Library instance);
    partial void InsertLibraryFile(LibraryFile instance);
    partial void UpdateLibraryFile(LibraryFile instance);
    partial void DeleteLibraryFile(LibraryFile instance);
    partial void InsertMagazine(Magazine instance);
    partial void UpdateMagazine(Magazine instance);
    partial void DeleteMagazine(Magazine instance);
    partial void InsertMagazineStory(MagazineStory instance);
    partial void UpdateMagazineStory(MagazineStory instance);
    partial void DeleteMagazineStory(MagazineStory instance);
    partial void InsertMeetingArchive(MeetingArchive instance);
    partial void UpdateMeetingArchive(MeetingArchive instance);
    partial void DeleteMeetingArchive(MeetingArchive instance);
    partial void InsertMeeting(Meeting instance);
    partial void UpdateMeeting(Meeting instance);
    partial void DeleteMeeting(Meeting instance);
    partial void InsertMettingMemory(MettingMemory instance);
    partial void UpdateMettingMemory(MettingMemory instance);
    partial void DeleteMettingMemory(MettingMemory instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    partial void InsertNewsType(NewsType instance);
    partial void UpdateNewsType(NewsType instance);
    partial void DeleteNewsType(NewsType instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPageSection(PageSection instance);
    partial void UpdatePageSection(PageSection instance);
    partial void DeletePageSection(PageSection instance);
    partial void InsertPrg_Area(Prg_Area instance);
    partial void UpdatePrg_Area(Prg_Area instance);
    partial void DeletePrg_Area(Prg_Area instance);
    partial void InsertPrg_City(Prg_City instance);
    partial void UpdatePrg_City(Prg_City instance);
    partial void DeletePrg_City(Prg_City instance);
    partial void InsertPrg_Family(Prg_Family instance);
    partial void UpdatePrg_Family(Prg_Family instance);
    partial void DeletePrg_Family(Prg_Family instance);
    partial void InsertPrg_Hobby(Prg_Hobby instance);
    partial void UpdatePrg_Hobby(Prg_Hobby instance);
    partial void DeletePrg_Hobby(Prg_Hobby instance);
    partial void InsertPrg_PersonAttendance(Prg_PersonAttendance instance);
    partial void UpdatePrg_PersonAttendance(Prg_PersonAttendance instance);
    partial void DeletePrg_PersonAttendance(Prg_PersonAttendance instance);
    partial void InsertPrg_PersonHobby(Prg_PersonHobby instance);
    partial void UpdatePrg_PersonHobby(Prg_PersonHobby instance);
    partial void DeletePrg_PersonHobby(Prg_PersonHobby instance);
    partial void InsertPrg_Servant(Prg_Servant instance);
    partial void UpdatePrg_Servant(Prg_Servant instance);
    partial void DeletePrg_Servant(Prg_Servant instance);
    partial void InsertPrg_ServantPerson(Prg_ServantPerson instance);
    partial void UpdatePrg_ServantPerson(Prg_ServantPerson instance);
    partial void DeletePrg_ServantPerson(Prg_ServantPerson instance);
    partial void InsertPrg_ServantVisit(Prg_ServantVisit instance);
    partial void UpdatePrg_ServantVisit(Prg_ServantVisit instance);
    partial void DeletePrg_ServantVisit(Prg_ServantVisit instance);
    partial void InsertQuiz(Quiz instance);
    partial void UpdateQuiz(Quiz instance);
    partial void DeleteQuiz(Quiz instance);
    partial void InsertQuizWinner(QuizWinner instance);
    partial void UpdateQuizWinner(QuizWinner instance);
    partial void DeleteQuizWinner(QuizWinner instance);
    partial void InsertSaveValue(SaveValue instance);
    partial void UpdateSaveValue(SaveValue instance);
    partial void DeleteSaveValue(SaveValue instance);
    partial void InsertSiteTree(SiteTree instance);
    partial void UpdateSiteTree(SiteTree instance);
    partial void DeleteSiteTree(SiteTree instance);
    partial void InsertSpeaker(Speaker instance);
    partial void UpdateSpeaker(Speaker instance);
    partial void DeleteSpeaker(Speaker instance);
    partial void InsertSpiritualTraining(SpiritualTraining instance);
    partial void UpdateSpiritualTraining(SpiritualTraining instance);
    partial void DeleteSpiritualTraining(SpiritualTraining instance);
    partial void InsertSubscribe(Subscribe instance);
    partial void UpdateSubscribe(Subscribe instance);
    partial void DeleteSubscribe(Subscribe instance);
    partial void InsertTempSound(TempSound instance);
    partial void UpdateTempSound(TempSound instance);
    partial void DeleteTempSound(TempSound instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertActivitySection(ActivitySection instance);
    partial void UpdateActivitySection(ActivitySection instance);
    partial void DeleteActivitySection(ActivitySection instance);
    partial void InsertActivitySectionUser(ActivitySectionUser instance);
    partial void UpdateActivitySectionUser(ActivitySectionUser instance);
    partial void DeleteActivitySectionUser(ActivitySectionUser instance);
    partial void InsertActivityUser(ActivityUser instance);
    partial void UpdateActivityUser(ActivityUser instance);
    partial void DeleteActivityUser(ActivityUser instance);
    partial void InsertAlbum(Album instance);
    partial void UpdateAlbum(Album instance);
    partial void DeleteAlbum(Album instance);
    partial void InsertPrg_Person(Prg_Person instance);
    partial void UpdatePrg_Person(Prg_Person instance);
    partial void DeletePrg_Person(Prg_Person instance);
    #endregion
		
		public dbDataContext() : 
				base(global::DAL.Properties.Settings.Default.goodshepherd2011ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Visitor> Visitors
		{
			get
			{
				return this.GetTable<Visitor>();
			}
		}
		
		public System.Data.Linq.Table<a2wal> a2wals
		{
			get
			{
				return this.GetTable<a2wal>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<AdminPage> AdminPages
		{
			get
			{
				return this.GetTable<AdminPage>();
			}
		}
		
		public System.Data.Linq.Table<AlbumImage> AlbumImages
		{
			get
			{
				return this.GetTable<AlbumImage>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<Aya> Ayas
		{
			get
			{
				return this.GetTable<Aya>();
			}
		}
		
		public System.Data.Linq.Table<DailyMeetingWithGod> DailyMeetingWithGods
		{
			get
			{
				return this.GetTable<DailyMeetingWithGod>();
			}
		}
		
		public System.Data.Linq.Table<HomeGallery> HomeGalleries
		{
			get
			{
				return this.GetTable<HomeGallery>();
			}
		}
		
		public System.Data.Linq.Table<ImagesSize> ImagesSizes
		{
			get
			{
				return this.GetTable<ImagesSize>();
			}
		}
		
		public System.Data.Linq.Table<Library> Libraries
		{
			get
			{
				return this.GetTable<Library>();
			}
		}
		
		public System.Data.Linq.Table<LibraryFile> LibraryFiles
		{
			get
			{
				return this.GetTable<LibraryFile>();
			}
		}
		
		public System.Data.Linq.Table<Magazine> Magazines
		{
			get
			{
				return this.GetTable<Magazine>();
			}
		}
		
		public System.Data.Linq.Table<MagazineStory> MagazineStories
		{
			get
			{
				return this.GetTable<MagazineStory>();
			}
		}
		
		public System.Data.Linq.Table<MeetingArchive> MeetingArchives
		{
			get
			{
				return this.GetTable<MeetingArchive>();
			}
		}
		
		public System.Data.Linq.Table<Meeting> Meetings
		{
			get
			{
				return this.GetTable<Meeting>();
			}
		}
		
		public System.Data.Linq.Table<MettingMemory> MettingMemories
		{
			get
			{
				return this.GetTable<MettingMemory>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<NewsType> NewsTypes
		{
			get
			{
				return this.GetTable<NewsType>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<PageSection> PageSections
		{
			get
			{
				return this.GetTable<PageSection>();
			}
		}
		
		public System.Data.Linq.Table<Prg_Area> Prg_Areas
		{
			get
			{
				return this.GetTable<Prg_Area>();
			}
		}
		
		public System.Data.Linq.Table<Prg_City> Prg_Cities
		{
			get
			{
				return this.GetTable<Prg_City>();
			}
		}
		
		public System.Data.Linq.Table<Prg_Family> Prg_Families
		{
			get
			{
				return this.GetTable<Prg_Family>();
			}
		}
		
		public System.Data.Linq.Table<Prg_Hobby> Prg_Hobbies
		{
			get
			{
				return this.GetTable<Prg_Hobby>();
			}
		}
		
		public System.Data.Linq.Table<Prg_PersonAttendance> Prg_PersonAttendances
		{
			get
			{
				return this.GetTable<Prg_PersonAttendance>();
			}
		}
		
		public System.Data.Linq.Table<Prg_PersonHobby> Prg_PersonHobbies
		{
			get
			{
				return this.GetTable<Prg_PersonHobby>();
			}
		}
		
		public System.Data.Linq.Table<Prg_Servant> Prg_Servants
		{
			get
			{
				return this.GetTable<Prg_Servant>();
			}
		}
		
		public System.Data.Linq.Table<Prg_ServantPerson> Prg_ServantPersons
		{
			get
			{
				return this.GetTable<Prg_ServantPerson>();
			}
		}
		
		public System.Data.Linq.Table<Prg_ServantVisit> Prg_ServantVisits
		{
			get
			{
				return this.GetTable<Prg_ServantVisit>();
			}
		}
		
		public System.Data.Linq.Table<Quiz> Quizs
		{
			get
			{
				return this.GetTable<Quiz>();
			}
		}
		
		public System.Data.Linq.Table<QuizWinner> QuizWinners
		{
			get
			{
				return this.GetTable<QuizWinner>();
			}
		}
		
		public System.Data.Linq.Table<SaveValue> SaveValues
		{
			get
			{
				return this.GetTable<SaveValue>();
			}
		}
		
		public System.Data.Linq.Table<SiteTree> SiteTrees
		{
			get
			{
				return this.GetTable<SiteTree>();
			}
		}
		
		public System.Data.Linq.Table<Speaker> Speakers
		{
			get
			{
				return this.GetTable<Speaker>();
			}
		}
		
		public System.Data.Linq.Table<SpiritualTraining> SpiritualTrainings
		{
			get
			{
				return this.GetTable<SpiritualTraining>();
			}
		}
		
		public System.Data.Linq.Table<Subscribe> Subscribes
		{
			get
			{
				return this.GetTable<Subscribe>();
			}
		}
		
		public System.Data.Linq.Table<TempSound> TempSounds
		{
			get
			{
				return this.GetTable<TempSound>();
			}
		}
		
		public System.Data.Linq.Table<ViewSpiritualTraining> ViewSpiritualTrainings
		{
			get
			{
				return this.GetTable<ViewSpiritualTraining>();
			}
		}
		
		public System.Data.Linq.Table<ViewA2wal> ViewA2wals
		{
			get
			{
				return this.GetTable<ViewA2wal>();
			}
		}
		
		public System.Data.Linq.Table<ViewAya> ViewAyas
		{
			get
			{
				return this.GetTable<ViewAya>();
			}
		}
		
		public System.Data.Linq.Table<ViewDailyMeetingWithGod> ViewDailyMeetingWithGods
		{
			get
			{
				return this.GetTable<ViewDailyMeetingWithGod>();
			}
		}
		
		public System.Data.Linq.Table<ViewFamily> ViewFamilies
		{
			get
			{
				return this.GetTable<ViewFamily>();
			}
		}
		
		public System.Data.Linq.Table<ViewMagazineInHome> ViewMagazineInHomes
		{
			get
			{
				return this.GetTable<ViewMagazineInHome>();
			}
		}
		
		public System.Data.Linq.Table<ViewMagazineStory> ViewMagazineStories
		{
			get
			{
				return this.GetTable<ViewMagazineStory>();
			}
		}
		
		public System.Data.Linq.Table<ViewMeetingInHome> ViewMeetingInHomes
		{
			get
			{
				return this.GetTable<ViewMeetingInHome>();
			}
		}
		
		public System.Data.Linq.Table<ViewNewsGallery> ViewNewsGalleries
		{
			get
			{
				return this.GetTable<ViewNewsGallery>();
			}
		}
		
		public System.Data.Linq.Table<ViewQuizWinner> ViewQuizWinners
		{
			get
			{
				return this.GetTable<ViewQuizWinner>();
			}
		}
		
		public System.Data.Linq.Table<ViewSpeaker> ViewSpeakers
		{
			get
			{
				return this.GetTable<ViewSpeaker>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<ActivitySection> ActivitySections
		{
			get
			{
				return this.GetTable<ActivitySection>();
			}
		}
		
		public System.Data.Linq.Table<ActivitySectionUser> ActivitySectionUsers
		{
			get
			{
				return this.GetTable<ActivitySectionUser>();
			}
		}
		
		public System.Data.Linq.Table<ActivityUser> ActivityUsers
		{
			get
			{
				return this.GetTable<ActivityUser>();
			}
		}
		
		public System.Data.Linq.Table<Album> Albums
		{
			get
			{
				return this.GetTable<Album>();
			}
		}
		
		public System.Data.Linq.Table<Prg_Person> Prg_Persons
		{
			get
			{
				return this.GetTable<Prg_Person>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.procedureBirthDays")]
		public ISingleResult<procedureBirthDaysResult> procedureBirthDays([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> day, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), day, month);
			return ((ISingleResult<procedureBirthDaysResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.procedureMarriageDate")]
		public ISingleResult<procedureMarriageDateResult> procedureMarriageDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> day, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), day, month);
			return ((ISingleResult<procedureMarriageDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SPbrowser")]
		public ISingleResult<SPbrowserResult> SPbrowser()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SPbrowserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SPCountriesVisitors")]
		public ISingleResult<SPCountriesVisitorsResult> SPCountriesVisitors()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SPCountriesVisitorsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SpCountriesVisitorsWithDates")]
		public ISingleResult<SpCountriesVisitorsWithDatesResult> SpCountriesVisitorsWithDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
			return ((ISingleResult<SpCountriesVisitorsWithDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PersonAttendance")]
		public ISingleResult<PersonAttendanceResult> PersonAttendance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> personId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personId);
			return ((ISingleResult<PersonAttendanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spActivitiesAttend")]
		public ISingleResult<spActivitiesAttendResult> spActivitiesAttend([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SectionsIds", DbType="NVarChar(MAX)")] string sectionsIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sectionsIds);
			return ((ISingleResult<spActivitiesAttendResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visitor")]
	public partial class Visitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VisitorId;
		
		private string _IPAddress;
		
		private string _MacAddress;
		
		private string _BrowserName;
		
		private string _BrowserVersion;
		
		private string _CountryName;
		
		private string _CountryCode;
		
		private string _FlagImage;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _DeviceType;
		
		private System.Nullable<int> _VisitPages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    partial void OnBrowserNameChanging(string value);
    partial void OnBrowserNameChanged();
    partial void OnBrowserVersionChanging(string value);
    partial void OnBrowserVersionChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnFlagImageChanging(string value);
    partial void OnFlagImageChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnDeviceTypeChanging(string value);
    partial void OnDeviceTypeChanged();
    partial void OnVisitPagesChanging(System.Nullable<int> value);
    partial void OnVisitPagesChanged();
    #endregion
		
		public Visitor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(100)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="NVarChar(50)")]
		public string MacAddress
		{
			get
			{
				return this._MacAddress;
			}
			set
			{
				if ((this._MacAddress != value))
				{
					this.OnMacAddressChanging(value);
					this.SendPropertyChanging();
					this._MacAddress = value;
					this.SendPropertyChanged("MacAddress");
					this.OnMacAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserName", DbType="NVarChar(250)")]
		public string BrowserName
		{
			get
			{
				return this._BrowserName;
			}
			set
			{
				if ((this._BrowserName != value))
				{
					this.OnBrowserNameChanging(value);
					this.SendPropertyChanging();
					this._BrowserName = value;
					this.SendPropertyChanged("BrowserName");
					this.OnBrowserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserVersion", DbType="NVarChar(250)")]
		public string BrowserVersion
		{
			get
			{
				return this._BrowserVersion;
			}
			set
			{
				if ((this._BrowserVersion != value))
				{
					this.OnBrowserVersionChanging(value);
					this.SendPropertyChanging();
					this._BrowserVersion = value;
					this.SendPropertyChanged("BrowserVersion");
					this.OnBrowserVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(250)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(250)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagImage", DbType="NVarChar(250)")]
		public string FlagImage
		{
			get
			{
				return this._FlagImage;
			}
			set
			{
				if ((this._FlagImage != value))
				{
					this.OnFlagImageChanging(value);
					this.SendPropertyChanging();
					this._FlagImage = value;
					this.SendPropertyChanged("FlagImage");
					this.OnFlagImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceType", DbType="NVarChar(150)")]
		public string DeviceType
		{
			get
			{
				return this._DeviceType;
			}
			set
			{
				if ((this._DeviceType != value))
				{
					this.OnDeviceTypeChanging(value);
					this.SendPropertyChanging();
					this._DeviceType = value;
					this.SendPropertyChanged("DeviceType");
					this.OnDeviceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitPages", DbType="Int")]
		public System.Nullable<int> VisitPages
		{
			get
			{
				return this._VisitPages;
			}
			set
			{
				if ((this._VisitPages != value))
				{
					this.OnVisitPagesChanging(value);
					this.SendPropertyChanging();
					this._VisitPages = value;
					this.SendPropertyChanged("VisitPages");
					this.OnVisitPagesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.a2wal")]
	public partial class a2wal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public a2wal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(2000)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoginName;
		
		private string _LoginPassword;
		
		private string _Mobile;
		
		private string _Job;
		
		private string _Image;
		
		private string _Email;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _IsAdministrator;
		
		private EntitySet<Prg_Person> _Prg_Persons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnJobChanging(string value);
    partial void OnJobChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnIsAdministratorChanging(System.Nullable<bool> value);
    partial void OnIsAdministratorChanged();
    #endregion
		
		public Admin()
		{
			this._Prg_Persons = new EntitySet<Prg_Person>(new Action<Prg_Person>(this.attach_Prg_Persons), new Action<Prg_Person>(this.detach_Prg_Persons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(50)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(50)")]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="NVarChar(150)")]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(100)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdministrator", DbType="Bit")]
		public System.Nullable<bool> IsAdministrator
		{
			get
			{
				return this._IsAdministrator;
			}
			set
			{
				if ((this._IsAdministrator != value))
				{
					this.OnIsAdministratorChanging(value);
					this.SendPropertyChanging();
					this._IsAdministrator = value;
					this.SendPropertyChanged("IsAdministrator");
					this.OnIsAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Prg_Person", Storage="_Prg_Persons", ThisKey="UserId", OtherKey="CreatedBy")]
		public EntitySet<Prg_Person> Prg_Persons
		{
			get
			{
				return this._Prg_Persons;
			}
			set
			{
				this._Prg_Persons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prg_Persons(Prg_Person entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Prg_Persons(Prg_Person entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminPages")]
	public partial class AdminPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserPageId;
		
		private System.Nullable<System.Guid> _AdminId;
		
		private System.Nullable<System.Guid> _PageId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserPageIdChanging(System.Guid value);
    partial void OnUserPageIdChanged();
    partial void OnAdminIdChanging(System.Nullable<System.Guid> value);
    partial void OnAdminIdChanged();
    partial void OnPageIdChanging(System.Nullable<System.Guid> value);
    partial void OnPageIdChanged();
    #endregion
		
		public AdminPage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserPageId
		{
			get
			{
				return this._UserPageId;
			}
			set
			{
				if ((this._UserPageId != value))
				{
					this.OnUserPageIdChanging(value);
					this.SendPropertyChanging();
					this._UserPageId = value;
					this.SendPropertyChanged("UserPageId");
					this.OnUserPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AdminId
		{
			get
			{
				return this._AdminId;
			}
			set
			{
				if ((this._AdminId != value))
				{
					this.OnAdminIdChanging(value);
					this.SendPropertyChanging();
					this._AdminId = value;
					this.SendPropertyChanged("AdminId");
					this.OnAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumImages")]
	public partial class AlbumImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ImageId;
		
		private System.Guid _AlbumId;
		
		private string _ImageFile;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Album> _Album;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(System.Guid value);
    partial void OnImageIdChanged();
    partial void OnAlbumIdChanging(System.Guid value);
    partial void OnAlbumIdChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public AlbumImage()
		{
			this._Album = default(EntityRef<Album>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(50)")]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_AlbumImage", Storage="_Album", ThisKey="AlbumId", OtherKey="AlbumId", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.AlbumImages.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.AlbumImages.Add(this);
						this._AlbumId = value.AlbumId;
					}
					else
					{
						this._AlbumId = default(System.Guid);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aya")]
	public partial class Aya : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Aya1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAya1Changing(string value);
    partial void OnAya1Changed();
    #endregion
		
		public Aya()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Aya", Storage="_Aya1", DbType="NVarChar(MAX)")]
		public string Aya1
		{
			get
			{
				return this._Aya1;
			}
			set
			{
				if ((this._Aya1 != value))
				{
					this.OnAya1Changing(value);
					this.SendPropertyChanging();
					this._Aya1 = value;
					this.SendPropertyChanged("Aya1");
					this.OnAya1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DailyMeetingWithGod")]
	public partial class DailyMeetingWithGod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleId;
		
		private string _Title;
		
		private string _Aya;
		
		private string _ArticleBy;
		
		private string _ArticleContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAyaChanging(string value);
    partial void OnAyaChanged();
    partial void OnArticleByChanging(string value);
    partial void OnArticleByChanged();
    partial void OnArticleContentChanging(string value);
    partial void OnArticleContentChanged();
    #endregion
		
		public DailyMeetingWithGod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aya", DbType="NVarChar(MAX)")]
		public string Aya
		{
			get
			{
				return this._Aya;
			}
			set
			{
				if ((this._Aya != value))
				{
					this.OnAyaChanging(value);
					this.SendPropertyChanging();
					this._Aya = value;
					this.SendPropertyChanged("Aya");
					this.OnAyaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleBy", DbType="NVarChar(350)")]
		public string ArticleBy
		{
			get
			{
				return this._ArticleBy;
			}
			set
			{
				if ((this._ArticleBy != value))
				{
					this.OnArticleByChanging(value);
					this.SendPropertyChanging();
					this._ArticleBy = value;
					this.SendPropertyChanged("ArticleBy");
					this.OnArticleByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleContent", DbType="NVarChar(MAX)")]
		public string ArticleContent
		{
			get
			{
				return this._ArticleContent;
			}
			set
			{
				if ((this._ArticleContent != value))
				{
					this.OnArticleContentChanging(value);
					this.SendPropertyChanging();
					this._ArticleContent = value;
					this.SendPropertyChanged("ArticleContent");
					this.OnArticleContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HomeGallery")]
	public partial class HomeGallery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ImageId;
		
		private string _ImageFile;
		
		private string _ImageDescription;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(System.Guid value);
    partial void OnImageIdChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnImageDescriptionChanging(string value);
    partial void OnImageDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public HomeGallery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(150)")]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageDescription", DbType="NVarChar(MAX)")]
		public string ImageDescription
		{
			get
			{
				return this._ImageDescription;
			}
			set
			{
				if ((this._ImageDescription != value))
				{
					this.OnImageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ImageDescription = value;
					this.SendPropertyChanged("ImageDescription");
					this.OnImageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImagesSizes")]
	public partial class ImagesSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImagesSizeId;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private string _FolderName;
		
		private string _Section;
		
		private string _Description;
		
		private System.Nullable<bool> _CurvedCorners;
		
		private System.Nullable<int> _CornerRadius;
		
		private System.Nullable<bool> _ResizeWidth;
		
		private System.Nullable<bool> _ResizeHeight;
		
		private System.Nullable<bool> _ConvertToGrayScale;
		
		private System.Nullable<bool> _AllowCrop;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImagesSizeIdChanging(int value);
    partial void OnImagesSizeIdChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnFolderNameChanging(string value);
    partial void OnFolderNameChanged();
    partial void OnSectionChanging(string value);
    partial void OnSectionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCurvedCornersChanging(System.Nullable<bool> value);
    partial void OnCurvedCornersChanged();
    partial void OnCornerRadiusChanging(System.Nullable<int> value);
    partial void OnCornerRadiusChanged();
    partial void OnResizeWidthChanging(System.Nullable<bool> value);
    partial void OnResizeWidthChanged();
    partial void OnResizeHeightChanging(System.Nullable<bool> value);
    partial void OnResizeHeightChanged();
    partial void OnConvertToGrayScaleChanging(System.Nullable<bool> value);
    partial void OnConvertToGrayScaleChanged();
    partial void OnAllowCropChanging(System.Nullable<bool> value);
    partial void OnAllowCropChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ImagesSize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagesSizeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImagesSizeId
		{
			get
			{
				return this._ImagesSizeId;
			}
			set
			{
				if ((this._ImagesSizeId != value))
				{
					this.OnImagesSizeIdChanging(value);
					this.SendPropertyChanging();
					this._ImagesSizeId = value;
					this.SendPropertyChanged("ImagesSizeId");
					this.OnImagesSizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderName", DbType="NVarChar(50)")]
		public string FolderName
		{
			get
			{
				return this._FolderName;
			}
			set
			{
				if ((this._FolderName != value))
				{
					this.OnFolderNameChanging(value);
					this.SendPropertyChanging();
					this._FolderName = value;
					this.SendPropertyChanged("FolderName");
					this.OnFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="NVarChar(50)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurvedCorners", DbType="Bit")]
		public System.Nullable<bool> CurvedCorners
		{
			get
			{
				return this._CurvedCorners;
			}
			set
			{
				if ((this._CurvedCorners != value))
				{
					this.OnCurvedCornersChanging(value);
					this.SendPropertyChanging();
					this._CurvedCorners = value;
					this.SendPropertyChanged("CurvedCorners");
					this.OnCurvedCornersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CornerRadius", DbType="Int")]
		public System.Nullable<int> CornerRadius
		{
			get
			{
				return this._CornerRadius;
			}
			set
			{
				if ((this._CornerRadius != value))
				{
					this.OnCornerRadiusChanging(value);
					this.SendPropertyChanging();
					this._CornerRadius = value;
					this.SendPropertyChanged("CornerRadius");
					this.OnCornerRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResizeWidth", DbType="Bit")]
		public System.Nullable<bool> ResizeWidth
		{
			get
			{
				return this._ResizeWidth;
			}
			set
			{
				if ((this._ResizeWidth != value))
				{
					this.OnResizeWidthChanging(value);
					this.SendPropertyChanging();
					this._ResizeWidth = value;
					this.SendPropertyChanged("ResizeWidth");
					this.OnResizeWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResizeHeight", DbType="Bit")]
		public System.Nullable<bool> ResizeHeight
		{
			get
			{
				return this._ResizeHeight;
			}
			set
			{
				if ((this._ResizeHeight != value))
				{
					this.OnResizeHeightChanging(value);
					this.SendPropertyChanging();
					this._ResizeHeight = value;
					this.SendPropertyChanged("ResizeHeight");
					this.OnResizeHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertToGrayScale", DbType="Bit")]
		public System.Nullable<bool> ConvertToGrayScale
		{
			get
			{
				return this._ConvertToGrayScale;
			}
			set
			{
				if ((this._ConvertToGrayScale != value))
				{
					this.OnConvertToGrayScaleChanging(value);
					this.SendPropertyChanging();
					this._ConvertToGrayScale = value;
					this.SendPropertyChanged("ConvertToGrayScale");
					this.OnConvertToGrayScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowCrop", DbType="Bit")]
		public System.Nullable<bool> AllowCrop
		{
			get
			{
				return this._AllowCrop;
			}
			set
			{
				if ((this._AllowCrop != value))
				{
					this.OnAllowCropChanging(value);
					this.SendPropertyChanging();
					this._AllowCrop = value;
					this.SendPropertyChanged("AllowCrop");
					this.OnAllowCropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Libraries")]
	public partial class Library : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LibraryItemId;
		
		private string _LibraryType;
		
		private System.Nullable<System.Guid> _ParentItemId;
		
		private string _ItemTitle;
		
		private string _ItemLink;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _RecOrder;
		
		private EntitySet<LibraryFile> _LibraryFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLibraryItemIdChanging(System.Guid value);
    partial void OnLibraryItemIdChanged();
    partial void OnLibraryTypeChanging(string value);
    partial void OnLibraryTypeChanged();
    partial void OnParentItemIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentItemIdChanged();
    partial void OnItemTitleChanging(string value);
    partial void OnItemTitleChanged();
    partial void OnItemLinkChanging(string value);
    partial void OnItemLinkChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRecOrderChanging(System.Nullable<int> value);
    partial void OnRecOrderChanged();
    #endregion
		
		public Library()
		{
			this._LibraryFiles = new EntitySet<LibraryFile>(new Action<LibraryFile>(this.attach_LibraryFiles), new Action<LibraryFile>(this.detach_LibraryFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LibraryItemId
		{
			get
			{
				return this._LibraryItemId;
			}
			set
			{
				if ((this._LibraryItemId != value))
				{
					this.OnLibraryItemIdChanging(value);
					this.SendPropertyChanging();
					this._LibraryItemId = value;
					this.SendPropertyChanged("LibraryItemId");
					this.OnLibraryItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LibraryType
		{
			get
			{
				return this._LibraryType;
			}
			set
			{
				if ((this._LibraryType != value))
				{
					this.OnLibraryTypeChanging(value);
					this.SendPropertyChanging();
					this._LibraryType = value;
					this.SendPropertyChanged("LibraryType");
					this.OnLibraryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentItemId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentItemId
		{
			get
			{
				return this._ParentItemId;
			}
			set
			{
				if ((this._ParentItemId != value))
				{
					this.OnParentItemIdChanging(value);
					this.SendPropertyChanging();
					this._ParentItemId = value;
					this.SendPropertyChanged("ParentItemId");
					this.OnParentItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ItemTitle
		{
			get
			{
				return this._ItemTitle;
			}
			set
			{
				if ((this._ItemTitle != value))
				{
					this.OnItemTitleChanging(value);
					this.SendPropertyChanging();
					this._ItemTitle = value;
					this.SendPropertyChanged("ItemTitle");
					this.OnItemTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLink", DbType="NVarChar(350)")]
		public string ItemLink
		{
			get
			{
				return this._ItemLink;
			}
			set
			{
				if ((this._ItemLink != value))
				{
					this.OnItemLinkChanging(value);
					this.SendPropertyChanging();
					this._ItemLink = value;
					this.SendPropertyChanged("ItemLink");
					this.OnItemLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecOrder", DbType="Int")]
		public System.Nullable<int> RecOrder
		{
			get
			{
				return this._RecOrder;
			}
			set
			{
				if ((this._RecOrder != value))
				{
					this.OnRecOrderChanging(value);
					this.SendPropertyChanging();
					this._RecOrder = value;
					this.SendPropertyChanged("RecOrder");
					this.OnRecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Library_LibraryFile", Storage="_LibraryFiles", ThisKey="LibraryItemId", OtherKey="LibraryItemId")]
		public EntitySet<LibraryFile> LibraryFiles
		{
			get
			{
				return this._LibraryFiles;
			}
			set
			{
				this._LibraryFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LibraryFiles(LibraryFile entity)
		{
			this.SendPropertyChanging();
			entity.Library = this;
		}
		
		private void detach_LibraryFiles(LibraryFile entity)
		{
			this.SendPropertyChanging();
			entity.Library = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibraryFiles")]
	public partial class LibraryFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FileId;
		
		private System.Nullable<System.Guid> _LibraryItemId;
		
		private string _FileTitle;
		
		private string _FileType;
		
		private string _FileName;
		
		private string _YoutubeLink;
		
		private System.Nullable<System.DateTime> _FileDate;
		
		private string _FileOwner;
		
		private string _FileDesc;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Library> _Library;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(System.Guid value);
    partial void OnFileIdChanged();
    partial void OnLibraryItemIdChanging(System.Nullable<System.Guid> value);
    partial void OnLibraryItemIdChanged();
    partial void OnFileTitleChanging(string value);
    partial void OnFileTitleChanged();
    partial void OnFileTypeChanging(string value);
    partial void OnFileTypeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnYoutubeLinkChanging(string value);
    partial void OnYoutubeLinkChanged();
    partial void OnFileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFileDateChanged();
    partial void OnFileOwnerChanging(string value);
    partial void OnFileOwnerChanged();
    partial void OnFileDescChanging(string value);
    partial void OnFileDescChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public LibraryFile()
		{
			this._Library = default(EntityRef<Library>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryItemId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LibraryItemId
		{
			get
			{
				return this._LibraryItemId;
			}
			set
			{
				if ((this._LibraryItemId != value))
				{
					if (this._Library.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLibraryItemIdChanging(value);
					this.SendPropertyChanging();
					this._LibraryItemId = value;
					this.SendPropertyChanged("LibraryItemId");
					this.OnLibraryItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTitle", DbType="NVarChar(150)")]
		public string FileTitle
		{
			get
			{
				return this._FileTitle;
			}
			set
			{
				if ((this._FileTitle != value))
				{
					this.OnFileTitleChanging(value);
					this.SendPropertyChanging();
					this._FileTitle = value;
					this.SendPropertyChanged("FileTitle");
					this.OnFileTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="NVarChar(50)")]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(150)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeLink", DbType="NVarChar(250)")]
		public string YoutubeLink
		{
			get
			{
				return this._YoutubeLink;
			}
			set
			{
				if ((this._YoutubeLink != value))
				{
					this.OnYoutubeLinkChanging(value);
					this.SendPropertyChanging();
					this._YoutubeLink = value;
					this.SendPropertyChanged("YoutubeLink");
					this.OnYoutubeLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FileDate
		{
			get
			{
				return this._FileDate;
			}
			set
			{
				if ((this._FileDate != value))
				{
					this.OnFileDateChanging(value);
					this.SendPropertyChanging();
					this._FileDate = value;
					this.SendPropertyChanged("FileDate");
					this.OnFileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileOwner", DbType="NVarChar(250)")]
		public string FileOwner
		{
			get
			{
				return this._FileOwner;
			}
			set
			{
				if ((this._FileOwner != value))
				{
					this.OnFileOwnerChanging(value);
					this.SendPropertyChanging();
					this._FileOwner = value;
					this.SendPropertyChanged("FileOwner");
					this.OnFileOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDesc", DbType="NVarChar(350)")]
		public string FileDesc
		{
			get
			{
				return this._FileDesc;
			}
			set
			{
				if ((this._FileDesc != value))
				{
					this.OnFileDescChanging(value);
					this.SendPropertyChanging();
					this._FileDesc = value;
					this.SendPropertyChanged("FileDesc");
					this.OnFileDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Library_LibraryFile", Storage="_Library", ThisKey="LibraryItemId", OtherKey="LibraryItemId", IsForeignKey=true)]
		public Library Library
		{
			get
			{
				return this._Library.Entity;
			}
			set
			{
				Library previousValue = this._Library.Entity;
				if (((previousValue != value) 
							|| (this._Library.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Library.Entity = null;
						previousValue.LibraryFiles.Remove(this);
					}
					this._Library.Entity = value;
					if ((value != null))
					{
						value.LibraryFiles.Add(this);
						this._LibraryItemId = value.LibraryItemId;
					}
					else
					{
						this._LibraryItemId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Library");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Magazine")]
	public partial class Magazine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MagazineId;
		
		private string _MagazineTitle;
		
		private int _MagazineMonth;
		
		private int _MagazineYear;
		
		private string _MagazineCover;
		
		private string _MagazinePDF;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<MagazineStory> _MagazineStories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMagazineIdChanging(System.Guid value);
    partial void OnMagazineIdChanged();
    partial void OnMagazineTitleChanging(string value);
    partial void OnMagazineTitleChanged();
    partial void OnMagazineMonthChanging(int value);
    partial void OnMagazineMonthChanged();
    partial void OnMagazineYearChanging(int value);
    partial void OnMagazineYearChanged();
    partial void OnMagazineCoverChanging(string value);
    partial void OnMagazineCoverChanged();
    partial void OnMagazinePDFChanging(string value);
    partial void OnMagazinePDFChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Magazine()
		{
			this._MagazineStories = new EntitySet<MagazineStory>(new Action<MagazineStory>(this.attach_MagazineStories), new Action<MagazineStory>(this.detach_MagazineStories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MagazineId
		{
			get
			{
				return this._MagazineId;
			}
			set
			{
				if ((this._MagazineId != value))
				{
					this.OnMagazineIdChanging(value);
					this.SendPropertyChanging();
					this._MagazineId = value;
					this.SendPropertyChanged("MagazineId");
					this.OnMagazineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineTitle", DbType="NVarChar(300)")]
		public string MagazineTitle
		{
			get
			{
				return this._MagazineTitle;
			}
			set
			{
				if ((this._MagazineTitle != value))
				{
					this.OnMagazineTitleChanging(value);
					this.SendPropertyChanging();
					this._MagazineTitle = value;
					this.SendPropertyChanged("MagazineTitle");
					this.OnMagazineTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineMonth", DbType="Int NOT NULL")]
		public int MagazineMonth
		{
			get
			{
				return this._MagazineMonth;
			}
			set
			{
				if ((this._MagazineMonth != value))
				{
					this.OnMagazineMonthChanging(value);
					this.SendPropertyChanging();
					this._MagazineMonth = value;
					this.SendPropertyChanged("MagazineMonth");
					this.OnMagazineMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineYear", DbType="Int NOT NULL")]
		public int MagazineYear
		{
			get
			{
				return this._MagazineYear;
			}
			set
			{
				if ((this._MagazineYear != value))
				{
					this.OnMagazineYearChanging(value);
					this.SendPropertyChanging();
					this._MagazineYear = value;
					this.SendPropertyChanged("MagazineYear");
					this.OnMagazineYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineCover", DbType="NVarChar(50)")]
		public string MagazineCover
		{
			get
			{
				return this._MagazineCover;
			}
			set
			{
				if ((this._MagazineCover != value))
				{
					this.OnMagazineCoverChanging(value);
					this.SendPropertyChanging();
					this._MagazineCover = value;
					this.SendPropertyChanged("MagazineCover");
					this.OnMagazineCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazinePDF", DbType="NVarChar(50)")]
		public string MagazinePDF
		{
			get
			{
				return this._MagazinePDF;
			}
			set
			{
				if ((this._MagazinePDF != value))
				{
					this.OnMagazinePDFChanging(value);
					this.SendPropertyChanging();
					this._MagazinePDF = value;
					this.SendPropertyChanged("MagazinePDF");
					this.OnMagazinePDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magazine_MagazineStory", Storage="_MagazineStories", ThisKey="MagazineId", OtherKey="MagazineId")]
		public EntitySet<MagazineStory> MagazineStories
		{
			get
			{
				return this._MagazineStories;
			}
			set
			{
				this._MagazineStories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MagazineStories(MagazineStory entity)
		{
			this.SendPropertyChanging();
			entity.Magazine = this;
		}
		
		private void detach_MagazineStories(MagazineStory entity)
		{
			this.SendPropertyChanging();
			entity.Magazine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MagazineStory")]
	public partial class MagazineStory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MagazineStoryId;
		
		private System.Guid _MagazineId;
		
		private string _StoryTitle;
		
		private string _StoryContent;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Magazine> _Magazine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMagazineStoryIdChanging(System.Guid value);
    partial void OnMagazineStoryIdChanged();
    partial void OnMagazineIdChanging(System.Guid value);
    partial void OnMagazineIdChanged();
    partial void OnStoryTitleChanging(string value);
    partial void OnStoryTitleChanged();
    partial void OnStoryContentChanging(string value);
    partial void OnStoryContentChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public MagazineStory()
		{
			this._Magazine = default(EntityRef<Magazine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineStoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MagazineStoryId
		{
			get
			{
				return this._MagazineStoryId;
			}
			set
			{
				if ((this._MagazineStoryId != value))
				{
					this.OnMagazineStoryIdChanging(value);
					this.SendPropertyChanging();
					this._MagazineStoryId = value;
					this.SendPropertyChanged("MagazineStoryId");
					this.OnMagazineStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MagazineId
		{
			get
			{
				return this._MagazineId;
			}
			set
			{
				if ((this._MagazineId != value))
				{
					if (this._Magazine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMagazineIdChanging(value);
					this.SendPropertyChanging();
					this._MagazineId = value;
					this.SendPropertyChanged("MagazineId");
					this.OnMagazineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string StoryTitle
		{
			get
			{
				return this._StoryTitle;
			}
			set
			{
				if ((this._StoryTitle != value))
				{
					this.OnStoryTitleChanging(value);
					this.SendPropertyChanging();
					this._StoryTitle = value;
					this.SendPropertyChanged("StoryTitle");
					this.OnStoryTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StoryContent
		{
			get
			{
				return this._StoryContent;
			}
			set
			{
				if ((this._StoryContent != value))
				{
					this.OnStoryContentChanging(value);
					this.SendPropertyChanging();
					this._StoryContent = value;
					this.SendPropertyChanged("StoryContent");
					this.OnStoryContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magazine_MagazineStory", Storage="_Magazine", ThisKey="MagazineId", OtherKey="MagazineId", IsForeignKey=true)]
		public Magazine Magazine
		{
			get
			{
				return this._Magazine.Entity;
			}
			set
			{
				Magazine previousValue = this._Magazine.Entity;
				if (((previousValue != value) 
							|| (this._Magazine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Magazine.Entity = null;
						previousValue.MagazineStories.Remove(this);
					}
					this._Magazine.Entity = value;
					if ((value != null))
					{
						value.MagazineStories.Add(this);
						this._MagazineId = value.MagazineId;
					}
					else
					{
						this._MagazineId = default(System.Guid);
					}
					this.SendPropertyChanged("Magazine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingArchive")]
	public partial class MeetingArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MeetingArchiveId;
		
		private string _ArchiveType;
		
		private System.DateTime _Date;
		
		private string _Title;
		
		private string _Negatives;
		
		private string _Positives;
		
		private string _Suggestions;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingArchiveIdChanging(System.Guid value);
    partial void OnMeetingArchiveIdChanged();
    partial void OnArchiveTypeChanging(string value);
    partial void OnArchiveTypeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNegativesChanging(string value);
    partial void OnNegativesChanged();
    partial void OnPositivesChanging(string value);
    partial void OnPositivesChanged();
    partial void OnSuggestionsChanging(string value);
    partial void OnSuggestionsChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public MeetingArchive()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingArchiveId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MeetingArchiveId
		{
			get
			{
				return this._MeetingArchiveId;
			}
			set
			{
				if ((this._MeetingArchiveId != value))
				{
					this.OnMeetingArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingArchiveId = value;
					this.SendPropertyChanged("MeetingArchiveId");
					this.OnMeetingArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArchiveType
		{
			get
			{
				return this._ArchiveType;
			}
			set
			{
				if ((this._ArchiveType != value))
				{
					this.OnArchiveTypeChanging(value);
					this.SendPropertyChanging();
					this._ArchiveType = value;
					this.SendPropertyChanged("ArchiveType");
					this.OnArchiveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Negatives", DbType="NVarChar(MAX)")]
		public string Negatives
		{
			get
			{
				return this._Negatives;
			}
			set
			{
				if ((this._Negatives != value))
				{
					this.OnNegativesChanging(value);
					this.SendPropertyChanging();
					this._Negatives = value;
					this.SendPropertyChanged("Negatives");
					this.OnNegativesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Positives", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Positives
		{
			get
			{
				return this._Positives;
			}
			set
			{
				if ((this._Positives != value))
				{
					this.OnPositivesChanging(value);
					this.SendPropertyChanging();
					this._Positives = value;
					this.SendPropertyChanged("Positives");
					this.OnPositivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suggestions", DbType="NVarChar(MAX)")]
		public string Suggestions
		{
			get
			{
				return this._Suggestions;
			}
			set
			{
				if ((this._Suggestions != value))
				{
					this.OnSuggestionsChanging(value);
					this.SendPropertyChanging();
					this._Suggestions = value;
					this.SendPropertyChanged("Suggestions");
					this.OnSuggestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meetings")]
	public partial class Meeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MeetingId;
		
		private System.Nullable<System.Guid> _MeetingAlbumId;
		
		private System.Nullable<System.DateTime> _MeetingDate;
		
		private System.Nullable<System.Guid> _SpeakerId;
		
		private string _MeetingTitle;
		
		private string _SoundFile;
		
		private string _VideoUrl;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Speaker> _Speaker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingIdChanging(System.Guid value);
    partial void OnMeetingIdChanged();
    partial void OnMeetingAlbumIdChanging(System.Nullable<System.Guid> value);
    partial void OnMeetingAlbumIdChanged();
    partial void OnMeetingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMeetingDateChanged();
    partial void OnSpeakerIdChanging(System.Nullable<System.Guid> value);
    partial void OnSpeakerIdChanged();
    partial void OnMeetingTitleChanging(string value);
    partial void OnMeetingTitleChanged();
    partial void OnSoundFileChanging(string value);
    partial void OnSoundFileChanged();
    partial void OnVideoUrlChanging(string value);
    partial void OnVideoUrlChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Meeting()
		{
			this._Speaker = default(EntityRef<Speaker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					this.OnMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingId = value;
					this.SendPropertyChanged("MeetingId");
					this.OnMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingAlbumId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MeetingAlbumId
		{
			get
			{
				return this._MeetingAlbumId;
			}
			set
			{
				if ((this._MeetingAlbumId != value))
				{
					this.OnMeetingAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingAlbumId = value;
					this.SendPropertyChanged("MeetingAlbumId");
					this.OnMeetingAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeetingDate
		{
			get
			{
				return this._MeetingDate;
			}
			set
			{
				if ((this._MeetingDate != value))
				{
					this.OnMeetingDateChanging(value);
					this.SendPropertyChanging();
					this._MeetingDate = value;
					this.SendPropertyChanged("MeetingDate");
					this.OnMeetingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SpeakerId
		{
			get
			{
				return this._SpeakerId;
			}
			set
			{
				if ((this._SpeakerId != value))
				{
					if (this._Speaker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpeakerIdChanging(value);
					this.SendPropertyChanging();
					this._SpeakerId = value;
					this.SendPropertyChanged("SpeakerId");
					this.OnSpeakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTitle", DbType="NVarChar(250)")]
		public string MeetingTitle
		{
			get
			{
				return this._MeetingTitle;
			}
			set
			{
				if ((this._MeetingTitle != value))
				{
					this.OnMeetingTitleChanging(value);
					this.SendPropertyChanging();
					this._MeetingTitle = value;
					this.SendPropertyChanged("MeetingTitle");
					this.OnMeetingTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundFile", DbType="NVarChar(250)")]
		public string SoundFile
		{
			get
			{
				return this._SoundFile;
			}
			set
			{
				if ((this._SoundFile != value))
				{
					this.OnSoundFileChanging(value);
					this.SendPropertyChanging();
					this._SoundFile = value;
					this.SendPropertyChanged("SoundFile");
					this.OnSoundFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoUrl", DbType="NVarChar(350)")]
		public string VideoUrl
		{
			get
			{
				return this._VideoUrl;
			}
			set
			{
				if ((this._VideoUrl != value))
				{
					this.OnVideoUrlChanging(value);
					this.SendPropertyChanging();
					this._VideoUrl = value;
					this.SendPropertyChanged("VideoUrl");
					this.OnVideoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speaker_Meeting", Storage="_Speaker", ThisKey="SpeakerId", OtherKey="SpeakerId", IsForeignKey=true)]
		public Speaker Speaker
		{
			get
			{
				return this._Speaker.Entity;
			}
			set
			{
				Speaker previousValue = this._Speaker.Entity;
				if (((previousValue != value) 
							|| (this._Speaker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speaker.Entity = null;
						previousValue.Meetings.Remove(this);
					}
					this._Speaker.Entity = value;
					if ((value != null))
					{
						value.Meetings.Add(this);
						this._SpeakerId = value.SpeakerId;
					}
					else
					{
						this._SpeakerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Speaker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MettingMemories")]
	public partial class MettingMemory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MettingMemoriesId;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Pamflet;
		
		private string _YoutubeLink;
		
		private System.Nullable<System.Guid> _AlbumId;
		
		private System.Guid _MeetingAlbumId;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<MettingMemory> _MettingMemory2;
		
		private EntityRef<MettingMemory> _MettingMemory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMettingMemoriesIdChanging(System.Guid value);
    partial void OnMettingMemoriesIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPamfletChanging(string value);
    partial void OnPamfletChanged();
    partial void OnYoutubeLinkChanging(string value);
    partial void OnYoutubeLinkChanged();
    partial void OnAlbumIdChanging(System.Nullable<System.Guid> value);
    partial void OnAlbumIdChanged();
    partial void OnMeetingAlbumIdChanging(System.Guid value);
    partial void OnMeetingAlbumIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public MettingMemory()
		{
			this._MettingMemory2 = default(EntityRef<MettingMemory>);
			this._MettingMemory1 = default(EntityRef<MettingMemory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MettingMemoriesId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MettingMemoriesId
		{
			get
			{
				return this._MettingMemoriesId;
			}
			set
			{
				if ((this._MettingMemoriesId != value))
				{
					if (this._MettingMemory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMettingMemoriesIdChanging(value);
					this.SendPropertyChanging();
					this._MettingMemoriesId = value;
					this.SendPropertyChanged("MettingMemoriesId");
					this.OnMettingMemoriesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pamflet", DbType="NVarChar(50)")]
		public string Pamflet
		{
			get
			{
				return this._Pamflet;
			}
			set
			{
				if ((this._Pamflet != value))
				{
					this.OnPamfletChanging(value);
					this.SendPropertyChanging();
					this._Pamflet = value;
					this.SendPropertyChanged("Pamflet");
					this.OnPamfletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeLink", DbType="NVarChar(250)")]
		public string YoutubeLink
		{
			get
			{
				return this._YoutubeLink;
			}
			set
			{
				if ((this._YoutubeLink != value))
				{
					this.OnYoutubeLinkChanging(value);
					this.SendPropertyChanging();
					this._YoutubeLink = value;
					this.SendPropertyChanged("YoutubeLink");
					this.OnYoutubeLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingAlbumId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MeetingAlbumId
		{
			get
			{
				return this._MeetingAlbumId;
			}
			set
			{
				if ((this._MeetingAlbumId != value))
				{
					this.OnMeetingAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingAlbumId = value;
					this.SendPropertyChanged("MeetingAlbumId");
					this.OnMeetingAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MettingMemory_MettingMemory", Storage="_MettingMemory2", ThisKey="MettingMemoriesId", OtherKey="MettingMemoriesId", IsUnique=true, IsForeignKey=false)]
		public MettingMemory MettingMemory2
		{
			get
			{
				return this._MettingMemory2.Entity;
			}
			set
			{
				MettingMemory previousValue = this._MettingMemory2.Entity;
				if (((previousValue != value) 
							|| (this._MettingMemory2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MettingMemory2.Entity = null;
						previousValue.MettingMemory1 = null;
					}
					this._MettingMemory2.Entity = value;
					if ((value != null))
					{
						value.MettingMemory1 = this;
					}
					this.SendPropertyChanged("MettingMemory2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MettingMemory_MettingMemory", Storage="_MettingMemory1", ThisKey="MettingMemoriesId", OtherKey="MettingMemoriesId", IsForeignKey=true)]
		public MettingMemory MettingMemory1
		{
			get
			{
				return this._MettingMemory1.Entity;
			}
			set
			{
				MettingMemory previousValue = this._MettingMemory1.Entity;
				if (((previousValue != value) 
							|| (this._MettingMemory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MettingMemory1.Entity = null;
						previousValue.MettingMemory2 = null;
					}
					this._MettingMemory1.Entity = value;
					if ((value != null))
					{
						value.MettingMemory2 = this;
						this._MettingMemoriesId = value.MettingMemoriesId;
					}
					else
					{
						this._MettingMemoriesId = default(System.Guid);
					}
					this.SendPropertyChanged("MettingMemory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NewsId;
		
		private System.Guid _NewsTypeId;
		
		private string _NewsTitle;
		
		private string _NewsImage;
		
		private string _NewsContent;
		
		private System.Nullable<bool> _ShowInGallery;
		
		private System.Nullable<bool> _ShowInNewsBar;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<NewsType> _NewsType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIdChanging(System.Guid value);
    partial void OnNewsIdChanged();
    partial void OnNewsTypeIdChanging(System.Guid value);
    partial void OnNewsTypeIdChanged();
    partial void OnNewsTitleChanging(string value);
    partial void OnNewsTitleChanged();
    partial void OnNewsImageChanging(string value);
    partial void OnNewsImageChanged();
    partial void OnNewsContentChanging(string value);
    partial void OnNewsContentChanged();
    partial void OnShowInGalleryChanging(System.Nullable<bool> value);
    partial void OnShowInGalleryChanged();
    partial void OnShowInNewsBarChanging(System.Nullable<bool> value);
    partial void OnShowInNewsBarChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public New()
		{
			this._NewsType = default(EntityRef<NewsType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NewsId
		{
			get
			{
				return this._NewsId;
			}
			set
			{
				if ((this._NewsId != value))
				{
					this.OnNewsIdChanging(value);
					this.SendPropertyChanging();
					this._NewsId = value;
					this.SendPropertyChanged("NewsId");
					this.OnNewsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTypeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NewsTypeId
		{
			get
			{
				return this._NewsTypeId;
			}
			set
			{
				if ((this._NewsTypeId != value))
				{
					if (this._NewsType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NewsTypeId = value;
					this.SendPropertyChanged("NewsTypeId");
					this.OnNewsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTitle", DbType="NVarChar(250)")]
		public string NewsTitle
		{
			get
			{
				return this._NewsTitle;
			}
			set
			{
				if ((this._NewsTitle != value))
				{
					this.OnNewsTitleChanging(value);
					this.SendPropertyChanging();
					this._NewsTitle = value;
					this.SendPropertyChanged("NewsTitle");
					this.OnNewsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsImage", DbType="NVarChar(150)")]
		public string NewsImage
		{
			get
			{
				return this._NewsImage;
			}
			set
			{
				if ((this._NewsImage != value))
				{
					this.OnNewsImageChanging(value);
					this.SendPropertyChanging();
					this._NewsImage = value;
					this.SendPropertyChanged("NewsImage");
					this.OnNewsImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsContent", DbType="NVarChar(MAX)")]
		public string NewsContent
		{
			get
			{
				return this._NewsContent;
			}
			set
			{
				if ((this._NewsContent != value))
				{
					this.OnNewsContentChanging(value);
					this.SendPropertyChanging();
					this._NewsContent = value;
					this.SendPropertyChanged("NewsContent");
					this.OnNewsContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInGallery", DbType="Bit")]
		public System.Nullable<bool> ShowInGallery
		{
			get
			{
				return this._ShowInGallery;
			}
			set
			{
				if ((this._ShowInGallery != value))
				{
					this.OnShowInGalleryChanging(value);
					this.SendPropertyChanging();
					this._ShowInGallery = value;
					this.SendPropertyChanged("ShowInGallery");
					this.OnShowInGalleryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInNewsBar", DbType="Bit")]
		public System.Nullable<bool> ShowInNewsBar
		{
			get
			{
				return this._ShowInNewsBar;
			}
			set
			{
				if ((this._ShowInNewsBar != value))
				{
					this.OnShowInNewsBarChanging(value);
					this.SendPropertyChanging();
					this._ShowInNewsBar = value;
					this.SendPropertyChanged("ShowInNewsBar");
					this.OnShowInNewsBarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsType_New", Storage="_NewsType", ThisKey="NewsTypeId", OtherKey="NewsTypeId", IsForeignKey=true)]
		public NewsType NewsType
		{
			get
			{
				return this._NewsType.Entity;
			}
			set
			{
				NewsType previousValue = this._NewsType.Entity;
				if (((previousValue != value) 
							|| (this._NewsType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NewsType.Entity = null;
						previousValue.News.Remove(this);
					}
					this._NewsType.Entity = value;
					if ((value != null))
					{
						value.News.Add(this);
						this._NewsTypeId = value.NewsTypeId;
					}
					else
					{
						this._NewsTypeId = default(System.Guid);
					}
					this.SendPropertyChanged("NewsType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsType")]
	public partial class NewsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NewsTypeId;
		
		private string _NewsTypeName;
		
		private int _RecOrder;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<New> _News;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsTypeIdChanging(System.Guid value);
    partial void OnNewsTypeIdChanged();
    partial void OnNewsTypeNameChanging(string value);
    partial void OnNewsTypeNameChanged();
    partial void OnRecOrderChanging(int value);
    partial void OnRecOrderChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public NewsType()
		{
			this._News = new EntitySet<New>(new Action<New>(this.attach_News), new Action<New>(this.detach_News));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NewsTypeId
		{
			get
			{
				return this._NewsTypeId;
			}
			set
			{
				if ((this._NewsTypeId != value))
				{
					this.OnNewsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NewsTypeId = value;
					this.SendPropertyChanged("NewsTypeId");
					this.OnNewsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTypeName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NewsTypeName
		{
			get
			{
				return this._NewsTypeName;
			}
			set
			{
				if ((this._NewsTypeName != value))
				{
					this.OnNewsTypeNameChanging(value);
					this.SendPropertyChanging();
					this._NewsTypeName = value;
					this.SendPropertyChanged("NewsTypeName");
					this.OnNewsTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecOrder", DbType="Int NOT NULL")]
		public int RecOrder
		{
			get
			{
				return this._RecOrder;
			}
			set
			{
				if ((this._RecOrder != value))
				{
					this.OnRecOrderChanging(value);
					this.SendPropertyChanging();
					this._RecOrder = value;
					this.SendPropertyChanged("RecOrder");
					this.OnRecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsType_New", Storage="_News", ThisKey="NewsTypeId", OtherKey="NewsTypeId")]
		public EntitySet<New> News
		{
			get
			{
				return this._News;
			}
			set
			{
				this._News.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_News(New entity)
		{
			this.SendPropertyChanging();
			entity.NewsType = this;
		}
		
		private void detach_News(New entity)
		{
			this.SendPropertyChanging();
			entity.NewsType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageId;
		
		private string _PageName;
		
		private EntitySet<PageSection> _PageSections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    #endregion
		
		public Page()
		{
			this._PageSections = new EntitySet<PageSection>(new Action<PageSection>(this.attach_PageSections), new Action<PageSection>(this.detach_PageSections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(150)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageSection", Storage="_PageSections", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<PageSection> PageSections
		{
			get
			{
				return this._PageSections;
			}
			set
			{
				this._PageSections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageSections(PageSection entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_PageSections(PageSection entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageSection")]
	public partial class PageSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageSectionId;
		
		private int _PageId;
		
		private string _SectionName;
		
		private string _ImageFile;
		
		private string _SectionContent;
		
		private string _VideoUrl;
		
		private System.Nullable<int> _RecOrder;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Page> _Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageSectionIdChanging(System.Guid value);
    partial void OnPageSectionIdChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnSectionNameChanging(string value);
    partial void OnSectionNameChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnSectionContentChanging(string value);
    partial void OnSectionContentChanged();
    partial void OnVideoUrlChanging(string value);
    partial void OnVideoUrlChanged();
    partial void OnRecOrderChanging(System.Nullable<int> value);
    partial void OnRecOrderChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public PageSection()
		{
			this._Page = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSectionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageSectionId
		{
			get
			{
				return this._PageSectionId;
			}
			set
			{
				if ((this._PageSectionId != value))
				{
					this.OnPageSectionIdChanging(value);
					this.SendPropertyChanging();
					this._PageSectionId = value;
					this.SendPropertyChanged("PageSectionId");
					this.OnPageSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(250)")]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this.OnSectionNameChanging(value);
					this.SendPropertyChanging();
					this._SectionName = value;
					this.SendPropertyChanged("SectionName");
					this.OnSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(50)")]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionContent", DbType="NVarChar(MAX)")]
		public string SectionContent
		{
			get
			{
				return this._SectionContent;
			}
			set
			{
				if ((this._SectionContent != value))
				{
					this.OnSectionContentChanging(value);
					this.SendPropertyChanging();
					this._SectionContent = value;
					this.SendPropertyChanged("SectionContent");
					this.OnSectionContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoUrl", DbType="NVarChar(250)")]
		public string VideoUrl
		{
			get
			{
				return this._VideoUrl;
			}
			set
			{
				if ((this._VideoUrl != value))
				{
					this.OnVideoUrlChanging(value);
					this.SendPropertyChanging();
					this._VideoUrl = value;
					this.SendPropertyChanged("VideoUrl");
					this.OnVideoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecOrder", DbType="Int")]
		public System.Nullable<int> RecOrder
		{
			get
			{
				return this._RecOrder;
			}
			set
			{
				if ((this._RecOrder != value))
				{
					this.OnRecOrderChanging(value);
					this.SendPropertyChanging();
					this._RecOrder = value;
					this.SendPropertyChanged("RecOrder");
					this.OnRecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageSection", Storage="_Page", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.PageSections.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.PageSections.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_Area")]
	public partial class Prg_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AreaId;
		
		private System.Guid _CityId;
		
		private string _AreaName;
		
		private int _RecOrder;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Prg_Family> _Prg_Families;
		
		private EntityRef<Prg_City> _Prg_City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreaIdChanging(System.Guid value);
    partial void OnAreaIdChanged();
    partial void OnCityIdChanging(System.Guid value);
    partial void OnCityIdChanged();
    partial void OnAreaNameChanging(string value);
    partial void OnAreaNameChanged();
    partial void OnRecOrderChanging(int value);
    partial void OnRecOrderChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Prg_Area()
		{
			this._Prg_Families = new EntitySet<Prg_Family>(new Action<Prg_Family>(this.attach_Prg_Families), new Action<Prg_Family>(this.detach_Prg_Families));
			this._Prg_City = default(EntityRef<Prg_City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._Prg_City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this.OnAreaNameChanging(value);
					this.SendPropertyChanging();
					this._AreaName = value;
					this.SendPropertyChanged("AreaName");
					this.OnAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecOrder", DbType="Int NOT NULL")]
		public int RecOrder
		{
			get
			{
				return this._RecOrder;
			}
			set
			{
				if ((this._RecOrder != value))
				{
					this.OnRecOrderChanging(value);
					this.SendPropertyChanging();
					this._RecOrder = value;
					this.SendPropertyChanged("RecOrder");
					this.OnRecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Area_Prg_Family", Storage="_Prg_Families", ThisKey="AreaId", OtherKey="AreaId")]
		public EntitySet<Prg_Family> Prg_Families
		{
			get
			{
				return this._Prg_Families;
			}
			set
			{
				this._Prg_Families.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_City_Prg_Area", Storage="_Prg_City", ThisKey="CityId", OtherKey="CityId", IsForeignKey=true)]
		public Prg_City Prg_City
		{
			get
			{
				return this._Prg_City.Entity;
			}
			set
			{
				Prg_City previousValue = this._Prg_City.Entity;
				if (((previousValue != value) 
							|| (this._Prg_City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_City.Entity = null;
						previousValue.Prg_Areas.Remove(this);
					}
					this._Prg_City.Entity = value;
					if ((value != null))
					{
						value.Prg_Areas.Add(this);
						this._CityId = value.CityId;
					}
					else
					{
						this._CityId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prg_Families(Prg_Family entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Area = this;
		}
		
		private void detach_Prg_Families(Prg_Family entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_City")]
	public partial class Prg_City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CityId;
		
		private string _CityName;
		
		private System.Nullable<int> _RecOrder;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Prg_Area> _Prg_Areas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIdChanging(System.Guid value);
    partial void OnCityIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnRecOrderChanging(System.Nullable<int> value);
    partial void OnRecOrderChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Prg_City()
		{
			this._Prg_Areas = new EntitySet<Prg_Area>(new Action<Prg_Area>(this.attach_Prg_Areas), new Action<Prg_Area>(this.detach_Prg_Areas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(150)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecOrder", DbType="Int")]
		public System.Nullable<int> RecOrder
		{
			get
			{
				return this._RecOrder;
			}
			set
			{
				if ((this._RecOrder != value))
				{
					this.OnRecOrderChanging(value);
					this.SendPropertyChanging();
					this._RecOrder = value;
					this.SendPropertyChanged("RecOrder");
					this.OnRecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_City_Prg_Area", Storage="_Prg_Areas", ThisKey="CityId", OtherKey="CityId")]
		public EntitySet<Prg_Area> Prg_Areas
		{
			get
			{
				return this._Prg_Areas;
			}
			set
			{
				this._Prg_Areas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prg_Areas(Prg_Area entity)
		{
			this.SendPropertyChanging();
			entity.Prg_City = this;
		}
		
		private void detach_Prg_Areas(Prg_Area entity)
		{
			this.SendPropertyChanging();
			entity.Prg_City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_Family")]
	public partial class Prg_Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FamilyId;
		
		private System.Nullable<System.Guid> _ResponsableId;
		
		private string _FamilyCode;
		
		private System.Nullable<System.Guid> _AreaId;
		
		private string _BuildingNo;
		
		private string _StreetName;
		
		private string _BuildingNextTo;
		
		private string _FloorNo;
		
		private string _FlatNo;
		
		private string _AddressNotes;
		
		private string _HomePhone;
		
		private System.Nullable<System.DateTime> _MarriageDate;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Prg_Person> _Prg_Persons;
		
		private EntityRef<Prg_Area> _Prg_Area;
		
		private EntityRef<Prg_Person> _Prg_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyIdChanging(System.Guid value);
    partial void OnFamilyIdChanged();
    partial void OnResponsableIdChanging(System.Nullable<System.Guid> value);
    partial void OnResponsableIdChanged();
    partial void OnFamilyCodeChanging(string value);
    partial void OnFamilyCodeChanged();
    partial void OnAreaIdChanging(System.Nullable<System.Guid> value);
    partial void OnAreaIdChanged();
    partial void OnBuildingNoChanging(string value);
    partial void OnBuildingNoChanged();
    partial void OnStreetNameChanging(string value);
    partial void OnStreetNameChanged();
    partial void OnBuildingNextToChanging(string value);
    partial void OnBuildingNextToChanged();
    partial void OnFloorNoChanging(string value);
    partial void OnFloorNoChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnAddressNotesChanging(string value);
    partial void OnAddressNotesChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMarriageDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMarriageDateChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Prg_Family()
		{
			this._Prg_Persons = new EntitySet<Prg_Person>(new Action<Prg_Person>(this.attach_Prg_Persons), new Action<Prg_Person>(this.detach_Prg_Persons));
			this._Prg_Area = default(EntityRef<Prg_Area>);
			this._Prg_Person = default(EntityRef<Prg_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this.OnFamilyIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyId = value;
					this.SendPropertyChanged("FamilyId");
					this.OnFamilyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsableId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResponsableId
		{
			get
			{
				return this._ResponsableId;
			}
			set
			{
				if ((this._ResponsableId != value))
				{
					if (this._Prg_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsableIdChanging(value);
					this.SendPropertyChanging();
					this._ResponsableId = value;
					this.SendPropertyChanged("ResponsableId");
					this.OnResponsableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string FamilyCode
		{
			get
			{
				return this._FamilyCode;
			}
			set
			{
				if ((this._FamilyCode != value))
				{
					this.OnFamilyCodeChanging(value);
					this.SendPropertyChanging();
					this._FamilyCode = value;
					this.SendPropertyChanged("FamilyCode");
					this.OnFamilyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._Prg_Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingNo", DbType="NVarChar(150)")]
		public string BuildingNo
		{
			get
			{
				return this._BuildingNo;
			}
			set
			{
				if ((this._BuildingNo != value))
				{
					this.OnBuildingNoChanging(value);
					this.SendPropertyChanging();
					this._BuildingNo = value;
					this.SendPropertyChanged("BuildingNo");
					this.OnBuildingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetName", DbType="NVarChar(500)")]
		public string StreetName
		{
			get
			{
				return this._StreetName;
			}
			set
			{
				if ((this._StreetName != value))
				{
					this.OnStreetNameChanging(value);
					this.SendPropertyChanging();
					this._StreetName = value;
					this.SendPropertyChanged("StreetName");
					this.OnStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingNextTo", DbType="NVarChar(500)")]
		public string BuildingNextTo
		{
			get
			{
				return this._BuildingNextTo;
			}
			set
			{
				if ((this._BuildingNextTo != value))
				{
					this.OnBuildingNextToChanging(value);
					this.SendPropertyChanging();
					this._BuildingNextTo = value;
					this.SendPropertyChanged("BuildingNextTo");
					this.OnBuildingNextToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorNo", DbType="NVarChar(150)")]
		public string FloorNo
		{
			get
			{
				return this._FloorNo;
			}
			set
			{
				if ((this._FloorNo != value))
				{
					this.OnFloorNoChanging(value);
					this.SendPropertyChanging();
					this._FloorNo = value;
					this.SendPropertyChanged("FloorNo");
					this.OnFloorNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="NVarChar(150)")]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressNotes", DbType="NVarChar(500)")]
		public string AddressNotes
		{
			get
			{
				return this._AddressNotes;
			}
			set
			{
				if ((this._AddressNotes != value))
				{
					this.OnAddressNotesChanging(value);
					this.SendPropertyChanging();
					this._AddressNotes = value;
					this.SendPropertyChanged("AddressNotes");
					this.OnAddressNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriageDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MarriageDate
		{
			get
			{
				return this._MarriageDate;
			}
			set
			{
				if ((this._MarriageDate != value))
				{
					this.OnMarriageDateChanging(value);
					this.SendPropertyChanging();
					this._MarriageDate = value;
					this.SendPropertyChanged("MarriageDate");
					this.OnMarriageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Family_Prg_Person", Storage="_Prg_Persons", ThisKey="FamilyId", OtherKey="FamilyId")]
		public EntitySet<Prg_Person> Prg_Persons
		{
			get
			{
				return this._Prg_Persons;
			}
			set
			{
				this._Prg_Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Area_Prg_Family", Storage="_Prg_Area", ThisKey="AreaId", OtherKey="AreaId", IsForeignKey=true)]
		public Prg_Area Prg_Area
		{
			get
			{
				return this._Prg_Area.Entity;
			}
			set
			{
				Prg_Area previousValue = this._Prg_Area.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Area.Entity = null;
						previousValue.Prg_Families.Remove(this);
					}
					this._Prg_Area.Entity = value;
					if ((value != null))
					{
						value.Prg_Families.Add(this);
						this._AreaId = value.AreaId;
					}
					else
					{
						this._AreaId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Prg_Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_Family", Storage="_Prg_Person", ThisKey="ResponsableId", OtherKey="PersonId", IsForeignKey=true)]
		public Prg_Person Prg_Person
		{
			get
			{
				return this._Prg_Person.Entity;
			}
			set
			{
				Prg_Person previousValue = this._Prg_Person.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Person.Entity = null;
						previousValue.Prg_Families.Remove(this);
					}
					this._Prg_Person.Entity = value;
					if ((value != null))
					{
						value.Prg_Families.Add(this);
						this._ResponsableId = value.PersonId;
					}
					else
					{
						this._ResponsableId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Prg_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prg_Persons(Prg_Person entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Family = this;
		}
		
		private void detach_Prg_Persons(Prg_Person entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Family = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_Hobbies")]
	public partial class Prg_Hobby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _HobbyId;
		
		private string _HobbyName;
		
		private int _RecOrder;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Prg_PersonHobby> _Prg_PersonHobbies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHobbyIdChanging(System.Guid value);
    partial void OnHobbyIdChanged();
    partial void OnHobbyNameChanging(string value);
    partial void OnHobbyNameChanged();
    partial void OnRecOrderChanging(int value);
    partial void OnRecOrderChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Prg_Hobby()
		{
			this._Prg_PersonHobbies = new EntitySet<Prg_PersonHobby>(new Action<Prg_PersonHobby>(this.attach_Prg_PersonHobbies), new Action<Prg_PersonHobby>(this.detach_Prg_PersonHobbies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HobbyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid HobbyId
		{
			get
			{
				return this._HobbyId;
			}
			set
			{
				if ((this._HobbyId != value))
				{
					this.OnHobbyIdChanging(value);
					this.SendPropertyChanging();
					this._HobbyId = value;
					this.SendPropertyChanged("HobbyId");
					this.OnHobbyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HobbyName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string HobbyName
		{
			get
			{
				return this._HobbyName;
			}
			set
			{
				if ((this._HobbyName != value))
				{
					this.OnHobbyNameChanging(value);
					this.SendPropertyChanging();
					this._HobbyName = value;
					this.SendPropertyChanged("HobbyName");
					this.OnHobbyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecOrder", DbType="Int NOT NULL")]
		public int RecOrder
		{
			get
			{
				return this._RecOrder;
			}
			set
			{
				if ((this._RecOrder != value))
				{
					this.OnRecOrderChanging(value);
					this.SendPropertyChanging();
					this._RecOrder = value;
					this.SendPropertyChanged("RecOrder");
					this.OnRecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Hobby_Prg_PersonHobby", Storage="_Prg_PersonHobbies", ThisKey="HobbyId", OtherKey="HobbyId")]
		public EntitySet<Prg_PersonHobby> Prg_PersonHobbies
		{
			get
			{
				return this._Prg_PersonHobbies;
			}
			set
			{
				this._Prg_PersonHobbies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prg_PersonHobbies(Prg_PersonHobby entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Hobby = this;
		}
		
		private void detach_Prg_PersonHobbies(Prg_PersonHobby entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Hobby = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_PersonAttendance")]
	public partial class Prg_PersonAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AttendId;
		
		private System.Guid _PersonId;
		
		private System.DateTime _AttendDate;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private EntityRef<Prg_Person> _Prg_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttendIdChanging(System.Guid value);
    partial void OnAttendIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnAttendDateChanging(System.DateTime value);
    partial void OnAttendDateChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public Prg_PersonAttendance()
		{
			this._Prg_Person = default(EntityRef<Prg_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AttendId
		{
			get
			{
				return this._AttendId;
			}
			set
			{
				if ((this._AttendId != value))
				{
					this.OnAttendIdChanging(value);
					this.SendPropertyChanging();
					this._AttendId = value;
					this.SendPropertyChanged("AttendId");
					this.OnAttendIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Prg_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendDate", DbType="DateTime NOT NULL")]
		public System.DateTime AttendDate
		{
			get
			{
				return this._AttendDate;
			}
			set
			{
				if ((this._AttendDate != value))
				{
					this.OnAttendDateChanging(value);
					this.SendPropertyChanging();
					this._AttendDate = value;
					this.SendPropertyChanged("AttendDate");
					this.OnAttendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_PersonAttendance", Storage="_Prg_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public Prg_Person Prg_Person
		{
			get
			{
				return this._Prg_Person.Entity;
			}
			set
			{
				Prg_Person previousValue = this._Prg_Person.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Person.Entity = null;
						previousValue.Prg_PersonAttendances.Remove(this);
					}
					this._Prg_Person.Entity = value;
					if ((value != null))
					{
						value.Prg_PersonAttendances.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_PersonHobbies")]
	public partial class Prg_PersonHobby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PersonHobbyId;
		
		private System.Guid _PersonId;
		
		private System.Guid _HobbyId;
		
		private EntityRef<Prg_Hobby> _Prg_Hobby;
		
		private EntityRef<Prg_Person> _Prg_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonHobbyIdChanging(System.Guid value);
    partial void OnPersonHobbyIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnHobbyIdChanging(System.Guid value);
    partial void OnHobbyIdChanged();
    #endregion
		
		public Prg_PersonHobby()
		{
			this._Prg_Hobby = default(EntityRef<Prg_Hobby>);
			this._Prg_Person = default(EntityRef<Prg_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonHobbyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PersonHobbyId
		{
			get
			{
				return this._PersonHobbyId;
			}
			set
			{
				if ((this._PersonHobbyId != value))
				{
					this.OnPersonHobbyIdChanging(value);
					this.SendPropertyChanging();
					this._PersonHobbyId = value;
					this.SendPropertyChanged("PersonHobbyId");
					this.OnPersonHobbyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Prg_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HobbyId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid HobbyId
		{
			get
			{
				return this._HobbyId;
			}
			set
			{
				if ((this._HobbyId != value))
				{
					if (this._Prg_Hobby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHobbyIdChanging(value);
					this.SendPropertyChanging();
					this._HobbyId = value;
					this.SendPropertyChanged("HobbyId");
					this.OnHobbyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Hobby_Prg_PersonHobby", Storage="_Prg_Hobby", ThisKey="HobbyId", OtherKey="HobbyId", IsForeignKey=true)]
		public Prg_Hobby Prg_Hobby
		{
			get
			{
				return this._Prg_Hobby.Entity;
			}
			set
			{
				Prg_Hobby previousValue = this._Prg_Hobby.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Hobby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Hobby.Entity = null;
						previousValue.Prg_PersonHobbies.Remove(this);
					}
					this._Prg_Hobby.Entity = value;
					if ((value != null))
					{
						value.Prg_PersonHobbies.Add(this);
						this._HobbyId = value.HobbyId;
					}
					else
					{
						this._HobbyId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Hobby");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_PersonHobby", Storage="_Prg_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public Prg_Person Prg_Person
		{
			get
			{
				return this._Prg_Person.Entity;
			}
			set
			{
				Prg_Person previousValue = this._Prg_Person.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Person.Entity = null;
						previousValue.Prg_PersonHobbies.Remove(this);
					}
					this._Prg_Person.Entity = value;
					if ((value != null))
					{
						value.Prg_PersonHobbies.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_Servant")]
	public partial class Prg_Servant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServantId;
		
		private System.Guid _PersonId;
		
		private System.Nullable<bool> _IsServantAftkad;
		
		private string _Services;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Prg_ServantVisit> _Prg_ServantVisits;
		
		private EntityRef<Prg_Person> _Prg_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServantIdChanging(System.Guid value);
    partial void OnServantIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnIsServantAftkadChanging(System.Nullable<bool> value);
    partial void OnIsServantAftkadChanged();
    partial void OnServicesChanging(string value);
    partial void OnServicesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Prg_Servant()
		{
			this._Prg_ServantVisits = new EntitySet<Prg_ServantVisit>(new Action<Prg_ServantVisit>(this.attach_Prg_ServantVisits), new Action<Prg_ServantVisit>(this.detach_Prg_ServantVisits));
			this._Prg_Person = default(EntityRef<Prg_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServantId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ServantId
		{
			get
			{
				return this._ServantId;
			}
			set
			{
				if ((this._ServantId != value))
				{
					this.OnServantIdChanging(value);
					this.SendPropertyChanging();
					this._ServantId = value;
					this.SendPropertyChanged("ServantId");
					this.OnServantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Prg_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsServantAftkad", DbType="Bit")]
		public System.Nullable<bool> IsServantAftkad
		{
			get
			{
				return this._IsServantAftkad;
			}
			set
			{
				if ((this._IsServantAftkad != value))
				{
					this.OnIsServantAftkadChanging(value);
					this.SendPropertyChanging();
					this._IsServantAftkad = value;
					this.SendPropertyChanged("IsServantAftkad");
					this.OnIsServantAftkadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Services", DbType="NVarChar(MAX)")]
		public string Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				if ((this._Services != value))
				{
					this.OnServicesChanging(value);
					this.SendPropertyChanging();
					this._Services = value;
					this.SendPropertyChanged("Services");
					this.OnServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Servant_Prg_ServantVisit", Storage="_Prg_ServantVisits", ThisKey="ServantId", OtherKey="ServantId")]
		public EntitySet<Prg_ServantVisit> Prg_ServantVisits
		{
			get
			{
				return this._Prg_ServantVisits;
			}
			set
			{
				this._Prg_ServantVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_Servant", Storage="_Prg_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public Prg_Person Prg_Person
		{
			get
			{
				return this._Prg_Person.Entity;
			}
			set
			{
				Prg_Person previousValue = this._Prg_Person.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Person.Entity = null;
						previousValue.Prg_Servants.Remove(this);
					}
					this._Prg_Person.Entity = value;
					if ((value != null))
					{
						value.Prg_Servants.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prg_ServantVisits(Prg_ServantVisit entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Servant = this;
		}
		
		private void detach_Prg_ServantVisits(Prg_ServantVisit entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Servant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_ServantPerson")]
	public partial class Prg_ServantPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServantPersonId;
		
		private System.Guid _ServantId;
		
		private System.Guid _PersonId;
		
		private EntityRef<Prg_Person> _Prg_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServantPersonIdChanging(System.Guid value);
    partial void OnServantPersonIdChanged();
    partial void OnServantIdChanging(System.Guid value);
    partial void OnServantIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    #endregion
		
		public Prg_ServantPerson()
		{
			this._Prg_Person = default(EntityRef<Prg_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServantPersonId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ServantPersonId
		{
			get
			{
				return this._ServantPersonId;
			}
			set
			{
				if ((this._ServantPersonId != value))
				{
					this.OnServantPersonIdChanging(value);
					this.SendPropertyChanging();
					this._ServantPersonId = value;
					this.SendPropertyChanged("ServantPersonId");
					this.OnServantPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServantId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServantId
		{
			get
			{
				return this._ServantId;
			}
			set
			{
				if ((this._ServantId != value))
				{
					this.OnServantIdChanging(value);
					this.SendPropertyChanging();
					this._ServantId = value;
					this.SendPropertyChanged("ServantId");
					this.OnServantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Prg_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_ServantPerson", Storage="_Prg_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public Prg_Person Prg_Person
		{
			get
			{
				return this._Prg_Person.Entity;
			}
			set
			{
				Prg_Person previousValue = this._Prg_Person.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Person.Entity = null;
						previousValue.Prg_ServantPersons.Remove(this);
					}
					this._Prg_Person.Entity = value;
					if ((value != null))
					{
						value.Prg_ServantPersons.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_ServantVisit")]
	public partial class Prg_ServantVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServantVisitId;
		
		private System.Guid _ServantId;
		
		private System.Guid _PersonId;
		
		private System.DateTime _VisitDate;
		
		private string _VisitNotes;
		
		private System.Nullable<bool> _ImpotantNotes;
		
		private System.Nullable<System.DateTime> _ReminderDate;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Prg_Servant> _Prg_Servant;
		
		private EntityRef<Prg_Person> _Prg_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServantVisitIdChanging(System.Guid value);
    partial void OnServantVisitIdChanged();
    partial void OnServantIdChanging(System.Guid value);
    partial void OnServantIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnVisitDateChanging(System.DateTime value);
    partial void OnVisitDateChanged();
    partial void OnVisitNotesChanging(string value);
    partial void OnVisitNotesChanged();
    partial void OnImpotantNotesChanging(System.Nullable<bool> value);
    partial void OnImpotantNotesChanged();
    partial void OnReminderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReminderDateChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Prg_ServantVisit()
		{
			this._Prg_Servant = default(EntityRef<Prg_Servant>);
			this._Prg_Person = default(EntityRef<Prg_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServantVisitId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ServantVisitId
		{
			get
			{
				return this._ServantVisitId;
			}
			set
			{
				if ((this._ServantVisitId != value))
				{
					this.OnServantVisitIdChanging(value);
					this.SendPropertyChanging();
					this._ServantVisitId = value;
					this.SendPropertyChanged("ServantVisitId");
					this.OnServantVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServantId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServantId
		{
			get
			{
				return this._ServantId;
			}
			set
			{
				if ((this._ServantId != value))
				{
					if (this._Prg_Servant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServantIdChanging(value);
					this.SendPropertyChanging();
					this._ServantId = value;
					this.SendPropertyChanged("ServantId");
					this.OnServantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Prg_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="DateTime NOT NULL")]
		public System.DateTime VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitNotes", DbType="NVarChar(500)")]
		public string VisitNotes
		{
			get
			{
				return this._VisitNotes;
			}
			set
			{
				if ((this._VisitNotes != value))
				{
					this.OnVisitNotesChanging(value);
					this.SendPropertyChanging();
					this._VisitNotes = value;
					this.SendPropertyChanged("VisitNotes");
					this.OnVisitNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpotantNotes", DbType="Bit")]
		public System.Nullable<bool> ImpotantNotes
		{
			get
			{
				return this._ImpotantNotes;
			}
			set
			{
				if ((this._ImpotantNotes != value))
				{
					this.OnImpotantNotesChanging(value);
					this.SendPropertyChanging();
					this._ImpotantNotes = value;
					this.SendPropertyChanged("ImpotantNotes");
					this.OnImpotantNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReminderDate
		{
			get
			{
				return this._ReminderDate;
			}
			set
			{
				if ((this._ReminderDate != value))
				{
					this.OnReminderDateChanging(value);
					this.SendPropertyChanging();
					this._ReminderDate = value;
					this.SendPropertyChanged("ReminderDate");
					this.OnReminderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Servant_Prg_ServantVisit", Storage="_Prg_Servant", ThisKey="ServantId", OtherKey="ServantId", IsForeignKey=true)]
		public Prg_Servant Prg_Servant
		{
			get
			{
				return this._Prg_Servant.Entity;
			}
			set
			{
				Prg_Servant previousValue = this._Prg_Servant.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Servant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Servant.Entity = null;
						previousValue.Prg_ServantVisits.Remove(this);
					}
					this._Prg_Servant.Entity = value;
					if ((value != null))
					{
						value.Prg_ServantVisits.Add(this);
						this._ServantId = value.ServantId;
					}
					else
					{
						this._ServantId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Servant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_ServantVisit", Storage="_Prg_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public Prg_Person Prg_Person
		{
			get
			{
				return this._Prg_Person.Entity;
			}
			set
			{
				Prg_Person previousValue = this._Prg_Person.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Person.Entity = null;
						previousValue.Prg_ServantVisits.Remove(this);
					}
					this._Prg_Person.Entity = value;
					if ((value != null))
					{
						value.Prg_ServantVisits.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quiz")]
	public partial class Quiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _QuizId;
		
		private string _QuizTitle;
		
		private System.Nullable<System.DateTime> _QuizDate;
		
		private string _QuizCover;
		
		private string _QuizPDF;
		
		private System.Nullable<System.DateTime> _QuizDeliveryDate;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<QuizWinner> _QuizWinners;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuizIdChanging(System.Guid value);
    partial void OnQuizIdChanged();
    partial void OnQuizTitleChanging(string value);
    partial void OnQuizTitleChanged();
    partial void OnQuizDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuizDateChanged();
    partial void OnQuizCoverChanging(string value);
    partial void OnQuizCoverChanged();
    partial void OnQuizPDFChanging(string value);
    partial void OnQuizPDFChanged();
    partial void OnQuizDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuizDeliveryDateChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Quiz()
		{
			this._QuizWinners = new EntitySet<QuizWinner>(new Action<QuizWinner>(this.attach_QuizWinners), new Action<QuizWinner>(this.detach_QuizWinners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid QuizId
		{
			get
			{
				return this._QuizId;
			}
			set
			{
				if ((this._QuizId != value))
				{
					this.OnQuizIdChanging(value);
					this.SendPropertyChanging();
					this._QuizId = value;
					this.SendPropertyChanged("QuizId");
					this.OnQuizIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizTitle", DbType="NVarChar(250)")]
		public string QuizTitle
		{
			get
			{
				return this._QuizTitle;
			}
			set
			{
				if ((this._QuizTitle != value))
				{
					this.OnQuizTitleChanging(value);
					this.SendPropertyChanging();
					this._QuizTitle = value;
					this.SendPropertyChanged("QuizTitle");
					this.OnQuizTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuizDate
		{
			get
			{
				return this._QuizDate;
			}
			set
			{
				if ((this._QuizDate != value))
				{
					this.OnQuizDateChanging(value);
					this.SendPropertyChanging();
					this._QuizDate = value;
					this.SendPropertyChanged("QuizDate");
					this.OnQuizDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizCover", DbType="NVarChar(50)")]
		public string QuizCover
		{
			get
			{
				return this._QuizCover;
			}
			set
			{
				if ((this._QuizCover != value))
				{
					this.OnQuizCoverChanging(value);
					this.SendPropertyChanging();
					this._QuizCover = value;
					this.SendPropertyChanged("QuizCover");
					this.OnQuizCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizPDF", DbType="NVarChar(50)")]
		public string QuizPDF
		{
			get
			{
				return this._QuizPDF;
			}
			set
			{
				if ((this._QuizPDF != value))
				{
					this.OnQuizPDFChanging(value);
					this.SendPropertyChanging();
					this._QuizPDF = value;
					this.SendPropertyChanged("QuizPDF");
					this.OnQuizPDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuizDeliveryDate
		{
			get
			{
				return this._QuizDeliveryDate;
			}
			set
			{
				if ((this._QuizDeliveryDate != value))
				{
					this.OnQuizDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._QuizDeliveryDate = value;
					this.SendPropertyChanged("QuizDeliveryDate");
					this.OnQuizDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_QuizWinner", Storage="_QuizWinners", ThisKey="QuizId", OtherKey="QuizId")]
		public EntitySet<QuizWinner> QuizWinners
		{
			get
			{
				return this._QuizWinners;
			}
			set
			{
				this._QuizWinners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuizWinners(QuizWinner entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = this;
		}
		
		private void detach_QuizWinners(QuizWinner entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuizWinners")]
	public partial class QuizWinner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _QuizWinnerId;
		
		private System.Guid _QuizId;
		
		private System.Guid _PersonId;
		
		private string _WinnerTitle;
		
		private int _WinnerNo;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Quiz> _Quiz;
		
		private EntityRef<Prg_Person> _Prg_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuizWinnerIdChanging(System.Guid value);
    partial void OnQuizWinnerIdChanged();
    partial void OnQuizIdChanging(System.Guid value);
    partial void OnQuizIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnWinnerTitleChanging(string value);
    partial void OnWinnerTitleChanged();
    partial void OnWinnerNoChanging(int value);
    partial void OnWinnerNoChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public QuizWinner()
		{
			this._Quiz = default(EntityRef<Quiz>);
			this._Prg_Person = default(EntityRef<Prg_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizWinnerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid QuizWinnerId
		{
			get
			{
				return this._QuizWinnerId;
			}
			set
			{
				if ((this._QuizWinnerId != value))
				{
					this.OnQuizWinnerIdChanging(value);
					this.SendPropertyChanging();
					this._QuizWinnerId = value;
					this.SendPropertyChanged("QuizWinnerId");
					this.OnQuizWinnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid QuizId
		{
			get
			{
				return this._QuizId;
			}
			set
			{
				if ((this._QuizId != value))
				{
					if (this._Quiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuizIdChanging(value);
					this.SendPropertyChanging();
					this._QuizId = value;
					this.SendPropertyChanged("QuizId");
					this.OnQuizIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Prg_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerTitle", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string WinnerTitle
		{
			get
			{
				return this._WinnerTitle;
			}
			set
			{
				if ((this._WinnerTitle != value))
				{
					this.OnWinnerTitleChanging(value);
					this.SendPropertyChanging();
					this._WinnerTitle = value;
					this.SendPropertyChanged("WinnerTitle");
					this.OnWinnerTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerNo", DbType="Int NOT NULL")]
		public int WinnerNo
		{
			get
			{
				return this._WinnerNo;
			}
			set
			{
				if ((this._WinnerNo != value))
				{
					this.OnWinnerNoChanging(value);
					this.SendPropertyChanging();
					this._WinnerNo = value;
					this.SendPropertyChanged("WinnerNo");
					this.OnWinnerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_QuizWinner", Storage="_Quiz", ThisKey="QuizId", OtherKey="QuizId", IsForeignKey=true)]
		public Quiz Quiz
		{
			get
			{
				return this._Quiz.Entity;
			}
			set
			{
				Quiz previousValue = this._Quiz.Entity;
				if (((previousValue != value) 
							|| (this._Quiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quiz.Entity = null;
						previousValue.QuizWinners.Remove(this);
					}
					this._Quiz.Entity = value;
					if ((value != null))
					{
						value.QuizWinners.Add(this);
						this._QuizId = value.QuizId;
					}
					else
					{
						this._QuizId = default(System.Guid);
					}
					this.SendPropertyChanged("Quiz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_QuizWinner", Storage="_Prg_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public Prg_Person Prg_Person
		{
			get
			{
				return this._Prg_Person.Entity;
			}
			set
			{
				Prg_Person previousValue = this._Prg_Person.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Person.Entity = null;
						previousValue.QuizWinners.Remove(this);
					}
					this._Prg_Person.Entity = value;
					if ((value != null))
					{
						value.QuizWinners.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SaveValues")]
	public partial class SaveValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DataId;
		
		private string _Title;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataIdChanging(int value);
    partial void OnDataIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public SaveValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteTree")]
	public partial class SiteTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteTreeId;
		
		private System.Nullable<System.Guid> _ParentSiteTreeId;
		
		private string _PageTitle;
		
		private string _PageFile;
		
		private System.Nullable<int> _RecOrder;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteTreeIdChanging(System.Guid value);
    partial void OnSiteTreeIdChanged();
    partial void OnParentSiteTreeIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentSiteTreeIdChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPageFileChanging(string value);
    partial void OnPageFileChanged();
    partial void OnRecOrderChanging(System.Nullable<int> value);
    partial void OnRecOrderChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public SiteTree()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteTreeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteTreeId
		{
			get
			{
				return this._SiteTreeId;
			}
			set
			{
				if ((this._SiteTreeId != value))
				{
					this.OnSiteTreeIdChanging(value);
					this.SendPropertyChanging();
					this._SiteTreeId = value;
					this.SendPropertyChanged("SiteTreeId");
					this.OnSiteTreeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSiteTreeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentSiteTreeId
		{
			get
			{
				return this._ParentSiteTreeId;
			}
			set
			{
				if ((this._ParentSiteTreeId != value))
				{
					this.OnParentSiteTreeIdChanging(value);
					this.SendPropertyChanging();
					this._ParentSiteTreeId = value;
					this.SendPropertyChanged("ParentSiteTreeId");
					this.OnParentSiteTreeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="NVarChar(250)")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFile", DbType="NVarChar(250)")]
		public string PageFile
		{
			get
			{
				return this._PageFile;
			}
			set
			{
				if ((this._PageFile != value))
				{
					this.OnPageFileChanging(value);
					this.SendPropertyChanging();
					this._PageFile = value;
					this.SendPropertyChanged("PageFile");
					this.OnPageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecOrder", DbType="Int")]
		public System.Nullable<int> RecOrder
		{
			get
			{
				return this._RecOrder;
			}
			set
			{
				if ((this._RecOrder != value))
				{
					this.OnRecOrderChanging(value);
					this.SendPropertyChanging();
					this._RecOrder = value;
					this.SendPropertyChanged("RecOrder");
					this.OnRecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speakers")]
	public partial class Speaker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SpeakerId;
		
		private string _SpeakerName;
		
		private string _SpeakerImage;
		
		private string _ChurchName;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Meeting> _Meetings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpeakerIdChanging(System.Guid value);
    partial void OnSpeakerIdChanged();
    partial void OnSpeakerNameChanging(string value);
    partial void OnSpeakerNameChanged();
    partial void OnSpeakerImageChanging(string value);
    partial void OnSpeakerImageChanged();
    partial void OnChurchNameChanging(string value);
    partial void OnChurchNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Speaker()
		{
			this._Meetings = new EntitySet<Meeting>(new Action<Meeting>(this.attach_Meetings), new Action<Meeting>(this.detach_Meetings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SpeakerId
		{
			get
			{
				return this._SpeakerId;
			}
			set
			{
				if ((this._SpeakerId != value))
				{
					this.OnSpeakerIdChanging(value);
					this.SendPropertyChanging();
					this._SpeakerId = value;
					this.SendPropertyChanged("SpeakerId");
					this.OnSpeakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SpeakerName
		{
			get
			{
				return this._SpeakerName;
			}
			set
			{
				if ((this._SpeakerName != value))
				{
					this.OnSpeakerNameChanging(value);
					this.SendPropertyChanging();
					this._SpeakerName = value;
					this.SendPropertyChanged("SpeakerName");
					this.OnSpeakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerImage", DbType="NVarChar(50)")]
		public string SpeakerImage
		{
			get
			{
				return this._SpeakerImage;
			}
			set
			{
				if ((this._SpeakerImage != value))
				{
					this.OnSpeakerImageChanging(value);
					this.SendPropertyChanging();
					this._SpeakerImage = value;
					this.SendPropertyChanged("SpeakerImage");
					this.OnSpeakerImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChurchName", DbType="NVarChar(150)")]
		public string ChurchName
		{
			get
			{
				return this._ChurchName;
			}
			set
			{
				if ((this._ChurchName != value))
				{
					this.OnChurchNameChanging(value);
					this.SendPropertyChanging();
					this._ChurchName = value;
					this.SendPropertyChanged("ChurchName");
					this.OnChurchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speaker_Meeting", Storage="_Meetings", ThisKey="SpeakerId", OtherKey="SpeakerId")]
		public EntitySet<Meeting> Meetings
		{
			get
			{
				return this._Meetings;
			}
			set
			{
				this._Meetings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Speaker = this;
		}
		
		private void detach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Speaker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpiritualTraining")]
	public partial class SpiritualTraining : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SpiritualTrainingId;
		
		private string _SpiritualTrainingTitle;
		
		private string _SpiritualTrainingDesc;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpiritualTrainingIdChanging(System.Guid value);
    partial void OnSpiritualTrainingIdChanged();
    partial void OnSpiritualTrainingTitleChanging(string value);
    partial void OnSpiritualTrainingTitleChanged();
    partial void OnSpiritualTrainingDescChanging(string value);
    partial void OnSpiritualTrainingDescChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public SpiritualTraining()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpiritualTrainingId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SpiritualTrainingId
		{
			get
			{
				return this._SpiritualTrainingId;
			}
			set
			{
				if ((this._SpiritualTrainingId != value))
				{
					this.OnSpiritualTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._SpiritualTrainingId = value;
					this.SendPropertyChanged("SpiritualTrainingId");
					this.OnSpiritualTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpiritualTrainingTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SpiritualTrainingTitle
		{
			get
			{
				return this._SpiritualTrainingTitle;
			}
			set
			{
				if ((this._SpiritualTrainingTitle != value))
				{
					this.OnSpiritualTrainingTitleChanging(value);
					this.SendPropertyChanging();
					this._SpiritualTrainingTitle = value;
					this.SendPropertyChanged("SpiritualTrainingTitle");
					this.OnSpiritualTrainingTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpiritualTrainingDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SpiritualTrainingDesc
		{
			get
			{
				return this._SpiritualTrainingDesc;
			}
			set
			{
				if ((this._SpiritualTrainingDesc != value))
				{
					this.OnSpiritualTrainingDescChanging(value);
					this.SendPropertyChanging();
					this._SpiritualTrainingDesc = value;
					this.SendPropertyChanged("SpiritualTrainingDesc");
					this.OnSpiritualTrainingDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscribe")]
	public partial class Subscribe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MailId;
		
		private string _EMail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailIdChanging(System.Guid value);
    partial void OnMailIdChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    #endregion
		
		public Subscribe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MailId
		{
			get
			{
				return this._MailId;
			}
			set
			{
				if ((this._MailId != value))
				{
					this.OnMailIdChanging(value);
					this.SendPropertyChanging();
					this._MailId = value;
					this.SendPropertyChanged("MailId");
					this.OnMailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(50)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TempSound")]
	public partial class TempSound : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SoundId;
		
		private System.Nullable<System.DateTime> _SoundDate;
		
		private string _SpeakerName;
		
		private System.Nullable<System.Guid> _SpeakerId;
		
		private string _SoundTitle;
		
		private string _SoundDbFile;
		
		private string _SoundFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoundIdChanging(System.Guid value);
    partial void OnSoundIdChanged();
    partial void OnSoundDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSoundDateChanged();
    partial void OnSpeakerNameChanging(string value);
    partial void OnSpeakerNameChanged();
    partial void OnSpeakerIdChanging(System.Nullable<System.Guid> value);
    partial void OnSpeakerIdChanged();
    partial void OnSoundTitleChanging(string value);
    partial void OnSoundTitleChanged();
    partial void OnSoundDbFileChanging(string value);
    partial void OnSoundDbFileChanged();
    partial void OnSoundFileChanging(string value);
    partial void OnSoundFileChanged();
    #endregion
		
		public TempSound()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SoundId
		{
			get
			{
				return this._SoundId;
			}
			set
			{
				if ((this._SoundId != value))
				{
					this.OnSoundIdChanging(value);
					this.SendPropertyChanging();
					this._SoundId = value;
					this.SendPropertyChanged("SoundId");
					this.OnSoundIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SoundDate
		{
			get
			{
				return this._SoundDate;
			}
			set
			{
				if ((this._SoundDate != value))
				{
					this.OnSoundDateChanging(value);
					this.SendPropertyChanging();
					this._SoundDate = value;
					this.SendPropertyChanged("SoundDate");
					this.OnSoundDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerName", DbType="NVarChar(250)")]
		public string SpeakerName
		{
			get
			{
				return this._SpeakerName;
			}
			set
			{
				if ((this._SpeakerName != value))
				{
					this.OnSpeakerNameChanging(value);
					this.SendPropertyChanging();
					this._SpeakerName = value;
					this.SendPropertyChanged("SpeakerName");
					this.OnSpeakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SpeakerId
		{
			get
			{
				return this._SpeakerId;
			}
			set
			{
				if ((this._SpeakerId != value))
				{
					this.OnSpeakerIdChanging(value);
					this.SendPropertyChanging();
					this._SpeakerId = value;
					this.SendPropertyChanged("SpeakerId");
					this.OnSpeakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundTitle", DbType="NVarChar(250)")]
		public string SoundTitle
		{
			get
			{
				return this._SoundTitle;
			}
			set
			{
				if ((this._SoundTitle != value))
				{
					this.OnSoundTitleChanging(value);
					this.SendPropertyChanging();
					this._SoundTitle = value;
					this.SendPropertyChanged("SoundTitle");
					this.OnSoundTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundDbFile", DbType="NVarChar(250)")]
		public string SoundDbFile
		{
			get
			{
				return this._SoundDbFile;
			}
			set
			{
				if ((this._SoundDbFile != value))
				{
					this.OnSoundDbFileChanging(value);
					this.SendPropertyChanging();
					this._SoundDbFile = value;
					this.SendPropertyChanged("SoundDbFile");
					this.OnSoundDbFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundFile", DbType="NVarChar(250)")]
		public string SoundFile
		{
			get
			{
				return this._SoundFile;
			}
			set
			{
				if ((this._SoundFile != value))
				{
					this.OnSoundFileChanging(value);
					this.SendPropertyChanging();
					this._SoundFile = value;
					this.SendPropertyChanged("SoundFile");
					this.OnSoundFileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewSpiritualTraining")]
	public partial class ViewSpiritualTraining
	{
		
		private System.Guid _SpiritualTrainingId;
		
		private string _SpiritualTrainingTitle;
		
		private string _SpiritualTrainingDesc;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		public ViewSpiritualTraining()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpiritualTrainingId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SpiritualTrainingId
		{
			get
			{
				return this._SpiritualTrainingId;
			}
			set
			{
				if ((this._SpiritualTrainingId != value))
				{
					this._SpiritualTrainingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpiritualTrainingTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SpiritualTrainingTitle
		{
			get
			{
				return this._SpiritualTrainingTitle;
			}
			set
			{
				if ((this._SpiritualTrainingTitle != value))
				{
					this._SpiritualTrainingTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpiritualTrainingDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SpiritualTrainingDesc
		{
			get
			{
				return this._SpiritualTrainingDesc;
			}
			set
			{
				if ((this._SpiritualTrainingDesc != value))
				{
					this._SpiritualTrainingDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this._CreatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this._ModifiedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewA2wal")]
	public partial class ViewA2wal
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Data;
		
		public ViewA2wal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(2000)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewAya")]
	public partial class ViewAya
	{
		
		private int _ID;
		
		private string _Aya;
		
		public ViewAya()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aya", DbType="NVarChar(MAX)")]
		public string Aya
		{
			get
			{
				return this._Aya;
			}
			set
			{
				if ((this._Aya != value))
				{
					this._Aya = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewDailyMeetingWithGod")]
	public partial class ViewDailyMeetingWithGod
	{
		
		private int _ArticleId;
		
		private string _Title;
		
		private string _Aya;
		
		private string _ArticleBy;
		
		private string _ArticleContent;
		
		public ViewDailyMeetingWithGod()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this._ArticleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aya", DbType="NVarChar(MAX)")]
		public string Aya
		{
			get
			{
				return this._Aya;
			}
			set
			{
				if ((this._Aya != value))
				{
					this._Aya = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleBy", DbType="NVarChar(350)")]
		public string ArticleBy
		{
			get
			{
				return this._ArticleBy;
			}
			set
			{
				if ((this._ArticleBy != value))
				{
					this._ArticleBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleContent", DbType="NVarChar(MAX)")]
		public string ArticleContent
		{
			get
			{
				return this._ArticleContent;
			}
			set
			{
				if ((this._ArticleContent != value))
				{
					this._ArticleContent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewFamily")]
	public partial class ViewFamily
	{
		
		private System.Guid _familyid;
		
		private string _Husband;
		
		private string _Wife;
		
		public ViewFamily()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_familyid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid familyid
		{
			get
			{
				return this._familyid;
			}
			set
			{
				if ((this._familyid != value))
				{
					this._familyid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Husband", DbType="NVarChar(80)")]
		public string Husband
		{
			get
			{
				return this._Husband;
			}
			set
			{
				if ((this._Husband != value))
				{
					this._Husband = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wife", DbType="NVarChar(80)")]
		public string Wife
		{
			get
			{
				return this._Wife;
			}
			set
			{
				if ((this._Wife != value))
				{
					this._Wife = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewMagazineInHome")]
	public partial class ViewMagazineInHome
	{
		
		private int _MagazineMonth;
		
		private int _MagazineYear;
		
		private string _MagazineCover;
		
		private string _MagazinePDF;
		
		private System.Guid _MagazineId;
		
		public ViewMagazineInHome()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineMonth", DbType="Int NOT NULL")]
		public int MagazineMonth
		{
			get
			{
				return this._MagazineMonth;
			}
			set
			{
				if ((this._MagazineMonth != value))
				{
					this._MagazineMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineYear", DbType="Int NOT NULL")]
		public int MagazineYear
		{
			get
			{
				return this._MagazineYear;
			}
			set
			{
				if ((this._MagazineYear != value))
				{
					this._MagazineYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineCover", DbType="NVarChar(50)")]
		public string MagazineCover
		{
			get
			{
				return this._MagazineCover;
			}
			set
			{
				if ((this._MagazineCover != value))
				{
					this._MagazineCover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazinePDF", DbType="NVarChar(50)")]
		public string MagazinePDF
		{
			get
			{
				return this._MagazinePDF;
			}
			set
			{
				if ((this._MagazinePDF != value))
				{
					this._MagazinePDF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MagazineId
		{
			get
			{
				return this._MagazineId;
			}
			set
			{
				if ((this._MagazineId != value))
				{
					this._MagazineId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewMagazineStory")]
	public partial class ViewMagazineStory
	{
		
		private System.Guid _MagazineStoryId;
		
		private System.Guid _MagazineId;
		
		private string _StoryTitle;
		
		private string _StoryContent;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		public ViewMagazineStory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineStoryId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MagazineStoryId
		{
			get
			{
				return this._MagazineStoryId;
			}
			set
			{
				if ((this._MagazineStoryId != value))
				{
					this._MagazineStoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MagazineId
		{
			get
			{
				return this._MagazineId;
			}
			set
			{
				if ((this._MagazineId != value))
				{
					this._MagazineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string StoryTitle
		{
			get
			{
				return this._StoryTitle;
			}
			set
			{
				if ((this._StoryTitle != value))
				{
					this._StoryTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StoryContent
		{
			get
			{
				return this._StoryContent;
			}
			set
			{
				if ((this._StoryContent != value))
				{
					this._StoryContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this._CreatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this._ModifiedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewMeetingInHome")]
	public partial class ViewMeetingInHome
	{
		
		private System.Guid _MeetingId;
		
		private System.Nullable<System.DateTime> _MeetingDate;
		
		private string _SoundFile;
		
		private string _VideoUrl;
		
		private string _SpeakerName;
		
		private string _MeetingTitle;
		
		public ViewMeetingInHome()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					this._MeetingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeetingDate
		{
			get
			{
				return this._MeetingDate;
			}
			set
			{
				if ((this._MeetingDate != value))
				{
					this._MeetingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundFile", DbType="NVarChar(50)")]
		public string SoundFile
		{
			get
			{
				return this._SoundFile;
			}
			set
			{
				if ((this._SoundFile != value))
				{
					this._SoundFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoUrl", DbType="NVarChar(350)")]
		public string VideoUrl
		{
			get
			{
				return this._VideoUrl;
			}
			set
			{
				if ((this._VideoUrl != value))
				{
					this._VideoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SpeakerName
		{
			get
			{
				return this._SpeakerName;
			}
			set
			{
				if ((this._SpeakerName != value))
				{
					this._SpeakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTitle", DbType="NVarChar(250)")]
		public string MeetingTitle
		{
			get
			{
				return this._MeetingTitle;
			}
			set
			{
				if ((this._MeetingTitle != value))
				{
					this._MeetingTitle = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewNewsGallery")]
	public partial class ViewNewsGallery
	{
		
		private System.Guid _NewsId;
		
		private string _NewsTitle;
		
		private string _NewsImage;
		
		private string _NewsContent;
		
		public ViewNewsGallery()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NewsId
		{
			get
			{
				return this._NewsId;
			}
			set
			{
				if ((this._NewsId != value))
				{
					this._NewsId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTitle", DbType="NVarChar(250)")]
		public string NewsTitle
		{
			get
			{
				return this._NewsTitle;
			}
			set
			{
				if ((this._NewsTitle != value))
				{
					this._NewsTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsImage", DbType="NVarChar(150)")]
		public string NewsImage
		{
			get
			{
				return this._NewsImage;
			}
			set
			{
				if ((this._NewsImage != value))
				{
					this._NewsImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsContent", DbType="NVarChar(MAX)")]
		public string NewsContent
		{
			get
			{
				return this._NewsContent;
			}
			set
			{
				if ((this._NewsContent != value))
				{
					this._NewsContent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewQuizWinners")]
	public partial class ViewQuizWinner
	{
		
		private System.Guid _PersonId;
		
		private string _PersonName;
		
		private int _WinnerNo;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		public ViewQuizWinner()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this._PersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerNo", DbType="Int NOT NULL")]
		public int WinnerNo
		{
			get
			{
				return this._WinnerNo;
			}
			set
			{
				if ((this._WinnerNo != value))
				{
					this._WinnerNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this._CreatedOn = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewSpeakers")]
	public partial class ViewSpeaker
	{
		
		private System.Guid _SpeakerId;
		
		private string _SpeakerName;
		
		private string _SpeakerImage;
		
		private string _ChurchName;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		public ViewSpeaker()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SpeakerId
		{
			get
			{
				return this._SpeakerId;
			}
			set
			{
				if ((this._SpeakerId != value))
				{
					this._SpeakerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SpeakerName
		{
			get
			{
				return this._SpeakerName;
			}
			set
			{
				if ((this._SpeakerName != value))
				{
					this._SpeakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerImage", DbType="NVarChar(50)")]
		public string SpeakerImage
		{
			get
			{
				return this._SpeakerImage;
			}
			set
			{
				if ((this._SpeakerImage != value))
				{
					this._SpeakerImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChurchName", DbType="NVarChar(150)")]
		public string ChurchName
		{
			get
			{
				return this._ChurchName;
			}
			set
			{
				if ((this._ChurchName != value))
				{
					this._ChurchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this._CreatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this._ModifiedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activities")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ActivityId;
		
		private string _ActivityTitle;
		
		private string _ActivityImage;
		
		private System.Nullable<System.DateTime> _ActivityDate;
		
		private string _DaysNo;
		
		private System.Nullable<System.DateTime> _LastRequestDate;
		
		private string _ServantName;
		
		private string _ServantMobile;
		
		private string _ActivityPlace;
		
		private string _ActivityDesc;
		
		private string _ActivityPrice;
		
		private string _RefuseReasons;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private string _VideoUrl;
		
		private EntitySet<ActivitySection> _ActivitySections;
		
		private EntitySet<ActivityUser> _ActivityUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIdChanging(System.Guid value);
    partial void OnActivityIdChanged();
    partial void OnActivityTitleChanging(string value);
    partial void OnActivityTitleChanged();
    partial void OnActivityImageChanging(string value);
    partial void OnActivityImageChanged();
    partial void OnActivityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivityDateChanged();
    partial void OnDaysNoChanging(string value);
    partial void OnDaysNoChanged();
    partial void OnLastRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRequestDateChanged();
    partial void OnServantNameChanging(string value);
    partial void OnServantNameChanged();
    partial void OnServantMobileChanging(string value);
    partial void OnServantMobileChanged();
    partial void OnActivityPlaceChanging(string value);
    partial void OnActivityPlaceChanged();
    partial void OnActivityDescChanging(string value);
    partial void OnActivityDescChanged();
    partial void OnActivityPriceChanging(string value);
    partial void OnActivityPriceChanged();
    partial void OnRefuseReasonsChanging(string value);
    partial void OnRefuseReasonsChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnVideoUrlChanging(string value);
    partial void OnVideoUrlChanged();
    #endregion
		
		public Activity()
		{
			this._ActivitySections = new EntitySet<ActivitySection>(new Action<ActivitySection>(this.attach_ActivitySections), new Action<ActivitySection>(this.detach_ActivitySections));
			this._ActivityUsers = new EntitySet<ActivityUser>(new Action<ActivityUser>(this.attach_ActivityUsers), new Action<ActivityUser>(this.detach_ActivityUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTitle", DbType="NVarChar(350)")]
		public string ActivityTitle
		{
			get
			{
				return this._ActivityTitle;
			}
			set
			{
				if ((this._ActivityTitle != value))
				{
					this.OnActivityTitleChanging(value);
					this.SendPropertyChanging();
					this._ActivityTitle = value;
					this.SendPropertyChanged("ActivityTitle");
					this.OnActivityTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityImage", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActivityImage
		{
			get
			{
				return this._ActivityImage;
			}
			set
			{
				if ((this._ActivityImage != value))
				{
					this.OnActivityImageChanging(value);
					this.SendPropertyChanging();
					this._ActivityImage = value;
					this.SendPropertyChanged("ActivityImage");
					this.OnActivityImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivityDate
		{
			get
			{
				return this._ActivityDate;
			}
			set
			{
				if ((this._ActivityDate != value))
				{
					this.OnActivityDateChanging(value);
					this.SendPropertyChanging();
					this._ActivityDate = value;
					this.SendPropertyChanged("ActivityDate");
					this.OnActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysNo", DbType="NVarChar(MAX)")]
		public string DaysNo
		{
			get
			{
				return this._DaysNo;
			}
			set
			{
				if ((this._DaysNo != value))
				{
					this.OnDaysNoChanging(value);
					this.SendPropertyChanging();
					this._DaysNo = value;
					this.SendPropertyChanged("DaysNo");
					this.OnDaysNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastRequestDate
		{
			get
			{
				return this._LastRequestDate;
			}
			set
			{
				if ((this._LastRequestDate != value))
				{
					this.OnLastRequestDateChanging(value);
					this.SendPropertyChanging();
					this._LastRequestDate = value;
					this.SendPropertyChanged("LastRequestDate");
					this.OnLastRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServantName", DbType="NVarChar(350)")]
		public string ServantName
		{
			get
			{
				return this._ServantName;
			}
			set
			{
				if ((this._ServantName != value))
				{
					this.OnServantNameChanging(value);
					this.SendPropertyChanging();
					this._ServantName = value;
					this.SendPropertyChanged("ServantName");
					this.OnServantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServantMobile", DbType="NVarChar(MAX)")]
		public string ServantMobile
		{
			get
			{
				return this._ServantMobile;
			}
			set
			{
				if ((this._ServantMobile != value))
				{
					this.OnServantMobileChanging(value);
					this.SendPropertyChanging();
					this._ServantMobile = value;
					this.SendPropertyChanged("ServantMobile");
					this.OnServantMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityPlace", DbType="NVarChar(250)")]
		public string ActivityPlace
		{
			get
			{
				return this._ActivityPlace;
			}
			set
			{
				if ((this._ActivityPlace != value))
				{
					this.OnActivityPlaceChanging(value);
					this.SendPropertyChanging();
					this._ActivityPlace = value;
					this.SendPropertyChanged("ActivityPlace");
					this.OnActivityPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDesc", DbType="NVarChar(MAX)")]
		public string ActivityDesc
		{
			get
			{
				return this._ActivityDesc;
			}
			set
			{
				if ((this._ActivityDesc != value))
				{
					this.OnActivityDescChanging(value);
					this.SendPropertyChanging();
					this._ActivityDesc = value;
					this.SendPropertyChanged("ActivityDesc");
					this.OnActivityDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityPrice", DbType="NVarChar(MAX)")]
		public string ActivityPrice
		{
			get
			{
				return this._ActivityPrice;
			}
			set
			{
				if ((this._ActivityPrice != value))
				{
					this.OnActivityPriceChanging(value);
					this.SendPropertyChanging();
					this._ActivityPrice = value;
					this.SendPropertyChanged("ActivityPrice");
					this.OnActivityPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefuseReasons", DbType="NVarChar(MAX)")]
		public string RefuseReasons
		{
			get
			{
				return this._RefuseReasons;
			}
			set
			{
				if ((this._RefuseReasons != value))
				{
					this.OnRefuseReasonsChanging(value);
					this.SendPropertyChanging();
					this._RefuseReasons = value;
					this.SendPropertyChanged("RefuseReasons");
					this.OnRefuseReasonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoUrl", DbType="NVarChar(500)")]
		public string VideoUrl
		{
			get
			{
				return this._VideoUrl;
			}
			set
			{
				if ((this._VideoUrl != value))
				{
					this.OnVideoUrlChanging(value);
					this.SendPropertyChanging();
					this._VideoUrl = value;
					this.SendPropertyChanged("VideoUrl");
					this.OnVideoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivitySection", Storage="_ActivitySections", ThisKey="ActivityId", OtherKey="ActivityId")]
		public EntitySet<ActivitySection> ActivitySections
		{
			get
			{
				return this._ActivitySections;
			}
			set
			{
				this._ActivitySections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityUser", Storage="_ActivityUsers", ThisKey="ActivityId", OtherKey="ActivityId")]
		public EntitySet<ActivityUser> ActivityUsers
		{
			get
			{
				return this._ActivityUsers;
			}
			set
			{
				this._ActivityUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivitySections(ActivitySection entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivitySections(ActivitySection entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityUsers(ActivityUser entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityUsers(ActivityUser entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivitySections")]
	public partial class ActivitySection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ActivitySectionId;
		
		private System.Guid _ActivityId;
		
		private string _SectionTitle;
		
		private string _SectionDesc;
		
		private System.Nullable<System.DateTime> _SectionDate;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<ActivitySectionUser> _ActivitySectionUsers;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivitySectionIdChanging(System.Guid value);
    partial void OnActivitySectionIdChanged();
    partial void OnActivityIdChanging(System.Guid value);
    partial void OnActivityIdChanged();
    partial void OnSectionTitleChanging(string value);
    partial void OnSectionTitleChanged();
    partial void OnSectionDescChanging(string value);
    partial void OnSectionDescChanged();
    partial void OnSectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSectionDateChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ActivitySection()
		{
			this._ActivitySectionUsers = new EntitySet<ActivitySectionUser>(new Action<ActivitySectionUser>(this.attach_ActivitySectionUsers), new Action<ActivitySectionUser>(this.detach_ActivitySectionUsers));
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitySectionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ActivitySectionId
		{
			get
			{
				return this._ActivitySectionId;
			}
			set
			{
				if ((this._ActivitySectionId != value))
				{
					this.OnActivitySectionIdChanging(value);
					this.SendPropertyChanging();
					this._ActivitySectionId = value;
					this.SendPropertyChanged("ActivitySectionId");
					this.OnActivitySectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SectionTitle
		{
			get
			{
				return this._SectionTitle;
			}
			set
			{
				if ((this._SectionTitle != value))
				{
					this.OnSectionTitleChanging(value);
					this.SendPropertyChanging();
					this._SectionTitle = value;
					this.SendPropertyChanged("SectionTitle");
					this.OnSectionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionDesc", DbType="NVarChar(MAX)")]
		public string SectionDesc
		{
			get
			{
				return this._SectionDesc;
			}
			set
			{
				if ((this._SectionDesc != value))
				{
					this.OnSectionDescChanging(value);
					this.SendPropertyChanging();
					this._SectionDesc = value;
					this.SendPropertyChanged("SectionDesc");
					this.OnSectionDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SectionDate
		{
			get
			{
				return this._SectionDate;
			}
			set
			{
				if ((this._SectionDate != value))
				{
					this.OnSectionDateChanging(value);
					this.SendPropertyChanging();
					this._SectionDate = value;
					this.SendPropertyChanged("SectionDate");
					this.OnSectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivitySection_ActivitySectionUser", Storage="_ActivitySectionUsers", ThisKey="ActivitySectionId", OtherKey="ActivitySectionId")]
		public EntitySet<ActivitySectionUser> ActivitySectionUsers
		{
			get
			{
				return this._ActivitySectionUsers;
			}
			set
			{
				this._ActivitySectionUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivitySection", Storage="_Activity", ThisKey="ActivityId", OtherKey="ActivityId", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivitySections.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivitySections.Add(this);
						this._ActivityId = value.ActivityId;
					}
					else
					{
						this._ActivityId = default(System.Guid);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivitySectionUsers(ActivitySectionUser entity)
		{
			this.SendPropertyChanging();
			entity.ActivitySection = this;
		}
		
		private void detach_ActivitySectionUsers(ActivitySectionUser entity)
		{
			this.SendPropertyChanging();
			entity.ActivitySection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivitySectionUser")]
	public partial class ActivitySectionUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ActivitySectionUserId;
		
		private System.Guid _ActivitySectionId;
		
		private System.Nullable<System.Guid> _ActivityUserId;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<ActivitySection> _ActivitySection;
		
		private EntityRef<ActivityUser> _ActivityUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivitySectionUserIdChanging(System.Guid value);
    partial void OnActivitySectionUserIdChanged();
    partial void OnActivitySectionIdChanging(System.Guid value);
    partial void OnActivitySectionIdChanged();
    partial void OnActivityUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnActivityUserIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ActivitySectionUser()
		{
			this._ActivitySection = default(EntityRef<ActivitySection>);
			this._ActivityUser = default(EntityRef<ActivityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitySectionUserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ActivitySectionUserId
		{
			get
			{
				return this._ActivitySectionUserId;
			}
			set
			{
				if ((this._ActivitySectionUserId != value))
				{
					this.OnActivitySectionUserIdChanging(value);
					this.SendPropertyChanging();
					this._ActivitySectionUserId = value;
					this.SendPropertyChanged("ActivitySectionUserId");
					this.OnActivitySectionUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitySectionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivitySectionId
		{
			get
			{
				return this._ActivitySectionId;
			}
			set
			{
				if ((this._ActivitySectionId != value))
				{
					if (this._ActivitySection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivitySectionIdChanging(value);
					this.SendPropertyChanging();
					this._ActivitySectionId = value;
					this.SendPropertyChanged("ActivitySectionId");
					this.OnActivitySectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ActivityUserId
		{
			get
			{
				return this._ActivityUserId;
			}
			set
			{
				if ((this._ActivityUserId != value))
				{
					if (this._ActivityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityUserIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityUserId = value;
					this.SendPropertyChanged("ActivityUserId");
					this.OnActivityUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivitySection_ActivitySectionUser", Storage="_ActivitySection", ThisKey="ActivitySectionId", OtherKey="ActivitySectionId", IsForeignKey=true)]
		public ActivitySection ActivitySection
		{
			get
			{
				return this._ActivitySection.Entity;
			}
			set
			{
				ActivitySection previousValue = this._ActivitySection.Entity;
				if (((previousValue != value) 
							|| (this._ActivitySection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivitySection.Entity = null;
						previousValue.ActivitySectionUsers.Remove(this);
					}
					this._ActivitySection.Entity = value;
					if ((value != null))
					{
						value.ActivitySectionUsers.Add(this);
						this._ActivitySectionId = value.ActivitySectionId;
					}
					else
					{
						this._ActivitySectionId = default(System.Guid);
					}
					this.SendPropertyChanged("ActivitySection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityUser_ActivitySectionUser", Storage="_ActivityUser", ThisKey="ActivityUserId", OtherKey="ActivityUserId", IsForeignKey=true)]
		public ActivityUser ActivityUser
		{
			get
			{
				return this._ActivityUser.Entity;
			}
			set
			{
				ActivityUser previousValue = this._ActivityUser.Entity;
				if (((previousValue != value) 
							|| (this._ActivityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityUser.Entity = null;
						previousValue.ActivitySectionUsers.Remove(this);
					}
					this._ActivityUser.Entity = value;
					if ((value != null))
					{
						value.ActivitySectionUsers.Add(this);
						this._ActivityUserId = value.ActivityUserId;
					}
					else
					{
						this._ActivityUserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ActivityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityUsers")]
	public partial class ActivityUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ActivityUserId;
		
		private System.Guid _ActivityId;
		
		private string _FullName;
		
		private string _Mobile;
		
		private string _Mobile2;
		
		private string _RoomNo;
		
		private string _Code;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<ActivitySectionUser> _ActivitySectionUsers;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityUserIdChanging(System.Guid value);
    partial void OnActivityUserIdChanged();
    partial void OnActivityIdChanging(System.Guid value);
    partial void OnActivityIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnMobile2Changing(string value);
    partial void OnMobile2Changed();
    partial void OnRoomNoChanging(string value);
    partial void OnRoomNoChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ActivityUser()
		{
			this._ActivitySectionUsers = new EntitySet<ActivitySectionUser>(new Action<ActivitySectionUser>(this.attach_ActivitySectionUsers), new Action<ActivitySectionUser>(this.detach_ActivitySectionUsers));
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityUserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ActivityUserId
		{
			get
			{
				return this._ActivityUserId;
			}
			set
			{
				if ((this._ActivityUserId != value))
				{
					this.OnActivityUserIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityUserId = value;
					this.SendPropertyChanged("ActivityUserId");
					this.OnActivityUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(11)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(11)")]
		public string Mobile2
		{
			get
			{
				return this._Mobile2;
			}
			set
			{
				if ((this._Mobile2 != value))
				{
					this.OnMobile2Changing(value);
					this.SendPropertyChanging();
					this._Mobile2 = value;
					this.SendPropertyChanged("Mobile2");
					this.OnMobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="NVarChar(50)")]
		public string RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					this.OnRoomNoChanging(value);
					this.SendPropertyChanging();
					this._RoomNo = value;
					this.SendPropertyChanged("RoomNo");
					this.OnRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityUser_ActivitySectionUser", Storage="_ActivitySectionUsers", ThisKey="ActivityUserId", OtherKey="ActivityUserId")]
		public EntitySet<ActivitySectionUser> ActivitySectionUsers
		{
			get
			{
				return this._ActivitySectionUsers;
			}
			set
			{
				this._ActivitySectionUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityUser", Storage="_Activity", ThisKey="ActivityId", OtherKey="ActivityId", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityUsers.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityUsers.Add(this);
						this._ActivityId = value.ActivityId;
					}
					else
					{
						this._ActivityId = default(System.Guid);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivitySectionUsers(ActivitySectionUser entity)
		{
			this.SendPropertyChanging();
			entity.ActivityUser = this;
		}
		
		private void detach_ActivitySectionUsers(ActivitySectionUser entity)
		{
			this.SendPropertyChanging();
			entity.ActivityUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Album")]
	public partial class Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AlbumId;
		
		private System.Nullable<int> _AlbumType;
		
		private string _AlbumName;
		
		private System.Nullable<System.DateTime> _AlbumDate;
		
		private string _AlbumDescription;
		
		private string _PamfletFile;
		
		private string _AlbumCover;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<AlbumImage> _AlbumImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIdChanging(System.Guid value);
    partial void OnAlbumIdChanged();
    partial void OnAlbumTypeChanging(System.Nullable<int> value);
    partial void OnAlbumTypeChanged();
    partial void OnAlbumNameChanging(string value);
    partial void OnAlbumNameChanged();
    partial void OnAlbumDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlbumDateChanged();
    partial void OnAlbumDescriptionChanging(string value);
    partial void OnAlbumDescriptionChanged();
    partial void OnPamfletFileChanging(string value);
    partial void OnPamfletFileChanged();
    partial void OnAlbumCoverChanging(string value);
    partial void OnAlbumCoverChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Album()
		{
			this._AlbumImages = new EntitySet<AlbumImage>(new Action<AlbumImage>(this.attach_AlbumImages), new Action<AlbumImage>(this.detach_AlbumImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumType", DbType="Int")]
		public System.Nullable<int> AlbumType
		{
			get
			{
				return this._AlbumType;
			}
			set
			{
				if ((this._AlbumType != value))
				{
					this.OnAlbumTypeChanging(value);
					this.SendPropertyChanging();
					this._AlbumType = value;
					this.SendPropertyChanged("AlbumType");
					this.OnAlbumTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumName", DbType="NVarChar(250)")]
		public string AlbumName
		{
			get
			{
				return this._AlbumName;
			}
			set
			{
				if ((this._AlbumName != value))
				{
					this.OnAlbumNameChanging(value);
					this.SendPropertyChanging();
					this._AlbumName = value;
					this.SendPropertyChanged("AlbumName");
					this.OnAlbumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlbumDate
		{
			get
			{
				return this._AlbumDate;
			}
			set
			{
				if ((this._AlbumDate != value))
				{
					this.OnAlbumDateChanging(value);
					this.SendPropertyChanging();
					this._AlbumDate = value;
					this.SendPropertyChanged("AlbumDate");
					this.OnAlbumDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumDescription", DbType="NVarChar(MAX)")]
		public string AlbumDescription
		{
			get
			{
				return this._AlbumDescription;
			}
			set
			{
				if ((this._AlbumDescription != value))
				{
					this.OnAlbumDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AlbumDescription = value;
					this.SendPropertyChanged("AlbumDescription");
					this.OnAlbumDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PamfletFile", DbType="NVarChar(150)")]
		public string PamfletFile
		{
			get
			{
				return this._PamfletFile;
			}
			set
			{
				if ((this._PamfletFile != value))
				{
					this.OnPamfletFileChanging(value);
					this.SendPropertyChanging();
					this._PamfletFile = value;
					this.SendPropertyChanged("PamfletFile");
					this.OnPamfletFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumCover", DbType="NVarChar(150)")]
		public string AlbumCover
		{
			get
			{
				return this._AlbumCover;
			}
			set
			{
				if ((this._AlbumCover != value))
				{
					this.OnAlbumCoverChanging(value);
					this.SendPropertyChanging();
					this._AlbumCover = value;
					this.SendPropertyChanged("AlbumCover");
					this.OnAlbumCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_AlbumImage", Storage="_AlbumImages", ThisKey="AlbumId", OtherKey="AlbumId")]
		public EntitySet<AlbumImage> AlbumImages
		{
			get
			{
				return this._AlbumImages;
			}
			set
			{
				this._AlbumImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlbumImages(AlbumImage entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_AlbumImages(AlbumImage entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prg_Person")]
	public partial class Prg_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PersonId;
		
		private System.Guid _FamilyId;
		
		private bool _Sex;
		
		private string _PersonCode;
		
		private int _Studious;
		
		private string _Relationship;
		
		private string _PersonName;
		
		private string _NationalID;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BloodType;
		
		private string _MaritalStatus;
		
		private string _Job;
		
		private string _JobPlace;
		
		private string _FatherName;
		
		private string _MobileNo1;
		
		private string _MobileNo2;
		
		private System.Nullable<bool> _WhatsUp;
		
		private string _Skype;
		
		private string _Email;
		
		private string _FaceBook;
		
		private string _UserPassword;
		
		private string _UserImage;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.Guid> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _CardPrinted;
		
		private EntitySet<Prg_Family> _Prg_Families;
		
		private EntitySet<Prg_PersonAttendance> _Prg_PersonAttendances;
		
		private EntitySet<Prg_PersonHobby> _Prg_PersonHobbies;
		
		private EntitySet<Prg_Servant> _Prg_Servants;
		
		private EntitySet<Prg_ServantPerson> _Prg_ServantPersons;
		
		private EntitySet<Prg_ServantVisit> _Prg_ServantVisits;
		
		private EntitySet<QuizWinner> _QuizWinners;
		
		private EntityRef<Prg_Family> _Prg_Family;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnFamilyIdChanging(System.Guid value);
    partial void OnFamilyIdChanged();
    partial void OnSexChanging(bool value);
    partial void OnSexChanged();
    partial void OnPersonCodeChanging(string value);
    partial void OnPersonCodeChanged();
    partial void OnStudiousChanging(int value);
    partial void OnStudiousChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnPersonNameChanging(string value);
    partial void OnPersonNameChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnJobChanging(string value);
    partial void OnJobChanged();
    partial void OnJobPlaceChanging(string value);
    partial void OnJobPlaceChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnMobileNo1Changing(string value);
    partial void OnMobileNo1Changed();
    partial void OnMobileNo2Changing(string value);
    partial void OnMobileNo2Changed();
    partial void OnWhatsUpChanging(System.Nullable<bool> value);
    partial void OnWhatsUpChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFaceBookChanging(string value);
    partial void OnFaceBookChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserImageChanging(string value);
    partial void OnUserImageChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCardPrintedChanging(System.Nullable<bool> value);
    partial void OnCardPrintedChanged();
    #endregion
		
		public Prg_Person()
		{
			this._Prg_Families = new EntitySet<Prg_Family>(new Action<Prg_Family>(this.attach_Prg_Families), new Action<Prg_Family>(this.detach_Prg_Families));
			this._Prg_PersonAttendances = new EntitySet<Prg_PersonAttendance>(new Action<Prg_PersonAttendance>(this.attach_Prg_PersonAttendances), new Action<Prg_PersonAttendance>(this.detach_Prg_PersonAttendances));
			this._Prg_PersonHobbies = new EntitySet<Prg_PersonHobby>(new Action<Prg_PersonHobby>(this.attach_Prg_PersonHobbies), new Action<Prg_PersonHobby>(this.detach_Prg_PersonHobbies));
			this._Prg_Servants = new EntitySet<Prg_Servant>(new Action<Prg_Servant>(this.attach_Prg_Servants), new Action<Prg_Servant>(this.detach_Prg_Servants));
			this._Prg_ServantPersons = new EntitySet<Prg_ServantPerson>(new Action<Prg_ServantPerson>(this.attach_Prg_ServantPersons), new Action<Prg_ServantPerson>(this.detach_Prg_ServantPersons));
			this._Prg_ServantVisits = new EntitySet<Prg_ServantVisit>(new Action<Prg_ServantVisit>(this.attach_Prg_ServantVisits), new Action<Prg_ServantVisit>(this.detach_Prg_ServantVisits));
			this._QuizWinners = new EntitySet<QuizWinner>(new Action<QuizWinner>(this.attach_QuizWinners), new Action<QuizWinner>(this.detach_QuizWinners));
			this._Prg_Family = default(EntityRef<Prg_Family>);
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					if (this._Prg_Family.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyId = value;
					this.SendPropertyChanged("FamilyId");
					this.OnFamilyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonCode", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string PersonCode
		{
			get
			{
				return this._PersonCode;
			}
			set
			{
				if ((this._PersonCode != value))
				{
					this.OnPersonCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonCode = value;
					this.SendPropertyChanged("PersonCode");
					this.OnPersonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Studious", DbType="Int NOT NULL")]
		public int Studious
		{
			get
			{
				return this._Studious;
			}
			set
			{
				if ((this._Studious != value))
				{
					this.OnStudiousChanging(value);
					this.SendPropertyChanging();
					this._Studious = value;
					this.SendPropertyChanged("Studious");
					this.OnStudiousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this.OnPersonNameChanging(value);
					this.SendPropertyChanging();
					this._PersonName = value;
					this.SendPropertyChanged("PersonName");
					this.OnPersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(14)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(10)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(10)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="NVarChar(150)")]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPlace", DbType="NVarChar(150)")]
		public string JobPlace
		{
			get
			{
				return this._JobPlace;
			}
			set
			{
				if ((this._JobPlace != value))
				{
					this.OnJobPlaceChanging(value);
					this.SendPropertyChanging();
					this._JobPlace = value;
					this.SendPropertyChanged("JobPlace");
					this.OnJobPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(150)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo1", DbType="NVarChar(11)")]
		public string MobileNo1
		{
			get
			{
				return this._MobileNo1;
			}
			set
			{
				if ((this._MobileNo1 != value))
				{
					this.OnMobileNo1Changing(value);
					this.SendPropertyChanging();
					this._MobileNo1 = value;
					this.SendPropertyChanged("MobileNo1");
					this.OnMobileNo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo2", DbType="NVarChar(11)")]
		public string MobileNo2
		{
			get
			{
				return this._MobileNo2;
			}
			set
			{
				if ((this._MobileNo2 != value))
				{
					this.OnMobileNo2Changing(value);
					this.SendPropertyChanging();
					this._MobileNo2 = value;
					this.SendPropertyChanged("MobileNo2");
					this.OnMobileNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhatsUp", DbType="Bit")]
		public System.Nullable<bool> WhatsUp
		{
			get
			{
				return this._WhatsUp;
			}
			set
			{
				if ((this._WhatsUp != value))
				{
					this.OnWhatsUpChanging(value);
					this.SendPropertyChanging();
					this._WhatsUp = value;
					this.SendPropertyChanged("WhatsUp");
					this.OnWhatsUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(50)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaceBook", DbType="NVarChar(150)")]
		public string FaceBook
		{
			get
			{
				return this._FaceBook;
			}
			set
			{
				if ((this._FaceBook != value))
				{
					this.OnFaceBookChanging(value);
					this.SendPropertyChanging();
					this._FaceBook = value;
					this.SendPropertyChanged("FaceBook");
					this.OnFaceBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(20)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImage", DbType="NVarChar(50)")]
		public string UserImage
		{
			get
			{
				return this._UserImage;
			}
			set
			{
				if ((this._UserImage != value))
				{
					this.OnUserImageChanging(value);
					this.SendPropertyChanging();
					this._UserImage = value;
					this.SendPropertyChanged("UserImage");
					this.OnUserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardPrinted", DbType="Bit")]
		public System.Nullable<bool> CardPrinted
		{
			get
			{
				return this._CardPrinted;
			}
			set
			{
				if ((this._CardPrinted != value))
				{
					this.OnCardPrintedChanging(value);
					this.SendPropertyChanging();
					this._CardPrinted = value;
					this.SendPropertyChanged("CardPrinted");
					this.OnCardPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_Family", Storage="_Prg_Families", ThisKey="PersonId", OtherKey="ResponsableId")]
		public EntitySet<Prg_Family> Prg_Families
		{
			get
			{
				return this._Prg_Families;
			}
			set
			{
				this._Prg_Families.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_PersonAttendance", Storage="_Prg_PersonAttendances", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<Prg_PersonAttendance> Prg_PersonAttendances
		{
			get
			{
				return this._Prg_PersonAttendances;
			}
			set
			{
				this._Prg_PersonAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_PersonHobby", Storage="_Prg_PersonHobbies", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<Prg_PersonHobby> Prg_PersonHobbies
		{
			get
			{
				return this._Prg_PersonHobbies;
			}
			set
			{
				this._Prg_PersonHobbies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_Servant", Storage="_Prg_Servants", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<Prg_Servant> Prg_Servants
		{
			get
			{
				return this._Prg_Servants;
			}
			set
			{
				this._Prg_Servants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_ServantPerson", Storage="_Prg_ServantPersons", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<Prg_ServantPerson> Prg_ServantPersons
		{
			get
			{
				return this._Prg_ServantPersons;
			}
			set
			{
				this._Prg_ServantPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_Prg_ServantVisit", Storage="_Prg_ServantVisits", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<Prg_ServantVisit> Prg_ServantVisits
		{
			get
			{
				return this._Prg_ServantVisits;
			}
			set
			{
				this._Prg_ServantVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Person_QuizWinner", Storage="_QuizWinners", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<QuizWinner> QuizWinners
		{
			get
			{
				return this._QuizWinners;
			}
			set
			{
				this._QuizWinners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prg_Family_Prg_Person", Storage="_Prg_Family", ThisKey="FamilyId", OtherKey="FamilyId", IsForeignKey=true)]
		public Prg_Family Prg_Family
		{
			get
			{
				return this._Prg_Family.Entity;
			}
			set
			{
				Prg_Family previousValue = this._Prg_Family.Entity;
				if (((previousValue != value) 
							|| (this._Prg_Family.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prg_Family.Entity = null;
						previousValue.Prg_Persons.Remove(this);
					}
					this._Prg_Family.Entity = value;
					if ((value != null))
					{
						value.Prg_Persons.Add(this);
						this._FamilyId = value.FamilyId;
					}
					else
					{
						this._FamilyId = default(System.Guid);
					}
					this.SendPropertyChanged("Prg_Family");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Prg_Person", Storage="_Admin", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Prg_Persons.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Prg_Persons.Add(this);
						this._CreatedBy = value.UserId;
					}
					else
					{
						this._CreatedBy = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prg_Families(Prg_Family entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = this;
		}
		
		private void detach_Prg_Families(Prg_Family entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = null;
		}
		
		private void attach_Prg_PersonAttendances(Prg_PersonAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = this;
		}
		
		private void detach_Prg_PersonAttendances(Prg_PersonAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = null;
		}
		
		private void attach_Prg_PersonHobbies(Prg_PersonHobby entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = this;
		}
		
		private void detach_Prg_PersonHobbies(Prg_PersonHobby entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = null;
		}
		
		private void attach_Prg_Servants(Prg_Servant entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = this;
		}
		
		private void detach_Prg_Servants(Prg_Servant entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = null;
		}
		
		private void attach_Prg_ServantPersons(Prg_ServantPerson entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = this;
		}
		
		private void detach_Prg_ServantPersons(Prg_ServantPerson entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = null;
		}
		
		private void attach_Prg_ServantVisits(Prg_ServantVisit entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = this;
		}
		
		private void detach_Prg_ServantVisits(Prg_ServantVisit entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = null;
		}
		
		private void attach_QuizWinners(QuizWinner entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = this;
		}
		
		private void detach_QuizWinners(QuizWinner entity)
		{
			this.SendPropertyChanging();
			entity.Prg_Person = null;
		}
	}
	
	public partial class procedureBirthDaysResult
	{
		
		private System.Guid _PersonId;
		
		private string _PersonName;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		public procedureBirthDaysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this._PersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
	}
	
	public partial class procedureMarriageDateResult
	{
		
		private System.Nullable<System.DateTime> _MarriageDate;
		
		private System.Guid _FamilyId;
		
		private string _Husband;
		
		private string _Wife;
		
		public procedureMarriageDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriageDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MarriageDate
		{
			get
			{
				return this._MarriageDate;
			}
			set
			{
				if ((this._MarriageDate != value))
				{
					this._MarriageDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this._FamilyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Husband", DbType="NVarChar(80)")]
		public string Husband
		{
			get
			{
				return this._Husband;
			}
			set
			{
				if ((this._Husband != value))
				{
					this._Husband = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wife", DbType="NVarChar(80)")]
		public string Wife
		{
			get
			{
				return this._Wife;
			}
			set
			{
				if ((this._Wife != value))
				{
					this._Wife = value;
				}
			}
		}
	}
	
	public partial class SPbrowserResult
	{
		
		private System.Nullable<int> _Visits;
		
		private string _BrowserName;
		
		public SPbrowserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this._Visits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserName", DbType="NVarChar(250)")]
		public string BrowserName
		{
			get
			{
				return this._BrowserName;
			}
			set
			{
				if ((this._BrowserName != value))
				{
					this._BrowserName = value;
				}
			}
		}
	}
	
	public partial class SPCountriesVisitorsResult
	{
		
		private System.Nullable<int> _VisitorsCount;
		
		private string _CountryName;
		
		private string _FlagImage;
		
		private string _IPAddress;
		
		public SPCountriesVisitorsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorsCount", DbType="Int")]
		public System.Nullable<int> VisitorsCount
		{
			get
			{
				return this._VisitorsCount;
			}
			set
			{
				if ((this._VisitorsCount != value))
				{
					this._VisitorsCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(250)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagImage", DbType="NVarChar(250)")]
		public string FlagImage
		{
			get
			{
				return this._FlagImage;
			}
			set
			{
				if ((this._FlagImage != value))
				{
					this._FlagImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(100)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
	}
	
	public partial class SpCountriesVisitorsWithDatesResult
	{
		
		private System.Nullable<int> _VisitorsCount;
		
		private string _CountryName;
		
		private string _FlagImage;
		
		private string _IPAddress;
		
		public SpCountriesVisitorsWithDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorsCount", DbType="Int")]
		public System.Nullable<int> VisitorsCount
		{
			get
			{
				return this._VisitorsCount;
			}
			set
			{
				if ((this._VisitorsCount != value))
				{
					this._VisitorsCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(250)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagImage", DbType="NVarChar(250)")]
		public string FlagImage
		{
			get
			{
				return this._FlagImage;
			}
			set
			{
				if ((this._FlagImage != value))
				{
					this._FlagImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(100)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
	}
	
	public partial class PersonAttendanceResult
	{
		
		private System.DateTime _AttendDate;
		
		private System.Nullable<System.Guid> _attendid;
		
		public PersonAttendanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendDate", DbType="DateTime NOT NULL")]
		public System.DateTime AttendDate
		{
			get
			{
				return this._AttendDate;
			}
			set
			{
				if ((this._AttendDate != value))
				{
					this._AttendDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> attendid
		{
			get
			{
				return this._attendid;
			}
			set
			{
				if ((this._attendid != value))
				{
					this._attendid = value;
				}
			}
		}
	}
	
	public partial class spActivitiesAttendResult
	{
		
		private string _FullName;
		
		private string _Mobile;
		
		private string _RoomNo;
		
		private string _Code;
		
		private System.Nullable<int> _ActivitiesCount;
		
		public spActivitiesAttendResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(11)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="NVarChar(50)")]
		public string RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					this._RoomNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitiesCount", DbType="Int")]
		public System.Nullable<int> ActivitiesCount
		{
			get
			{
				return this._ActivitiesCount;
			}
			set
			{
				if ((this._ActivitiesCount != value))
				{
					this._ActivitiesCount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
